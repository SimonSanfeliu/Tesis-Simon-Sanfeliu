code_tag,llm_used,prompt_version,query_id,query_run,sql_query,tab_schema,label,query_gen_time,query_gen_date,query_results,query_error,sql_time,sql_date,r_row,p_row,r_col,p_col,N_perfect_row,N_perfect_col
0.20.1,,,14,0,"SELECT
    det.oid, det.candid,
    det.drb, det.fid,
    det.mjd, det.magpsf, det.sigmapsf,
    det.has_stamp,
    ps1.sgscore1, ps1.distpsnr1
FROM
    (SELECT *
    FROM detection
    WHERE oid in ('ZTF23aavzgjg','ZTF23aaynzyk','ZTF23aavqxos','ZTF23aaknyni','ZTF23aavsdtc','ZTF18aandkua','ZTF23aaxfewt','ZTF23aavshwi','ZTF22aawasao','ZTF23aaxgvnt')
    ) as det
    INNER JOIN
    (SELECT *
    FROM ps1_ztf
    WHERE oid in ('ZTF23aavzgjg','ZTF23aaynzyk','ZTF23aavqxos','ZTF23aaknyni','ZTF23aavsdtc','ZTF18aandkua','ZTF23aaxfewt','ZTF23aavshwi','ZTF22aawasao','ZTF23aaxgvnt')
    ) as ps1
    ON det.oid=ps1.oid
WHERE
     (ps1.sgscore1 < 0.5 OR ps1.distpsnr1 < 1)
    AND det.drb > 0.5
",,,,,"[             oid               candid       drb  fid           mjd     magpsf  \
0   ZTF18aandkua  2434183903015015056  0.994159    1  60188.183901  17.907194   
1   ZTF18aandkua  2756269351915010002  0.993011    2  60510.269352  19.379133   
2   ZTF18aandkua  2772265531915010009  0.850113    2  60526.265532  19.641638   
3   ZTF18aandkua  2979404491915010015  0.696538    1  60733.404491  18.887863   
4   ZTF18aandkua  2434183903015015056  0.994159    1  60188.183901  17.907194   
5   ZTF18aandkua  2756269351915010002  0.993011    2  60510.269352  19.379133   
6   ZTF18aandkua  2772265531915010009  0.850113    2  60526.265532  19.641638   
7   ZTF18aandkua  2979404491915010015  0.696538    1  60733.404491  18.887863   
8   ZTF22aawasao  2754319833415015025  0.755912    2  60508.319838  18.594233   
9   ZTF22aawasao  2754319833415015025  0.755912    2  60508.319838  18.594233   
10  ZTF23aavqxos  2403456661315015121  0.949127    2  60157.456667  19.240726   
11  ZTF23aavqxos  3003155891315015002  0.921584    2  60757.155891  19.689983   
12  ZTF23aavsdtc  2404379221215015002  0.879817    1  60158.379225  19.220120   
13  ZTF23aavshwi  2404407764015015005  1.000000    2  60158.407766  18.168100   
14  ZTF23aavshwi  2407423334015015007  1.000000    1  60161.423333  18.688477   
15  ZTF23aavshwi  2407462734015015009  1.000000    2  60161.462732  18.336126   
16  ZTF23aavshwi  2414423484015015018  1.000000    1  60168.423484  19.307604   
17  ZTF23aavshwi  2414445984015015007  1.000000    2  60168.445984  18.701996   
18  ZTF23aavshwi  2416422074015015019  1.000000    2  60170.422072  18.754047   
19  ZTF23aavshwi  2419451634015015008  1.000000    2  60173.451632  18.789606   
20  ZTF23aavshwi  2419475694015015014  0.999999    1  60173.475694  19.894947   
21  ZTF23aavshwi  2424486604015015016  1.000000    2  60178.486609  18.973866   
22  ZTF23aavshwi  2428469354015015016  1.000000    2  60182.469352  19.151363   
23  ZTF23aavshwi  2430436074015015016  0.999985    1  60184.436076  20.503382   
24  ZTF23aavshwi  2430476444015015012  0.999998    2  60184.476447  19.384290   
25  ZTF23aavshwi  2432427924015015008  0.999994    2  60186.427928  19.566288   
26  ZTF23aavshwi  2440490024015015015  0.999963    2  60194.490023  19.956028   
27  ZTF23aavshwi  2446471444015015013  0.999977    2  60200.471447  20.102201   
28  ZTF23aavshwi  2448496784015015039  0.999999    2  60202.496782  20.105957   
29  ZTF23aaxfewt  2415290061315015127  0.999312    2  60169.290069  18.205078   

    sigmapsf  has_stamp  sgscore1  distpsnr1  
0   0.180156       True  0.075167   0.326697  
1   0.161114       True  0.075167   0.326697  
2   0.183068       True  0.075167   0.326697  
3   0.175351       True  0.075167   0.326697  
4   0.180156       True  0.075167   1.234589  
5   0.161114       True  0.075167   1.234589  
6   0.183068       True  0.075167   1.234589  
7   0.175351       True  0.075167   1.234589  
8   0.143780       True  0.380149   0.673811  
9   0.143780       True  0.380149   0.904783  
10  0.181016       True  0.024583   0.183817  
11  0.215474       True  0.024583   0.183817  
12  0.216384       True  0.209000   0.343322  
13  0.067061       True  0.009583   2.024725  
14  0.096587       True  0.009583   2.024725  
15  0.060204       True  0.009583   2.024725  
16  0.094521       True  0.009583   2.024725  
17  0.070969       True  0.009583   2.024725  
18  0.061804       True  0.009583   2.024725  
19  0.067233       True  0.009583   2.024725  
20  0.147604       True  0.009583   2.024725  
21  0.079126       True  0.009583   2.024725  
22  0.086399       True  0.009583   2.024725  
23  0.193578       True  0.009583   2.024725  
24  0.112882       True  0.009583   2.024725  
25  0.176278       True  0.009583   2.024725  
26  0.172092       True  0.009583   2.024725  
27  0.131913       True  0.009583   2.024725  
28  0.146235       True  0.009583   2.024725  
29  0.063636       True  0.134304   0.635949  ]",,4.483963251113892,2025-07-24T00:55:18,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,14,1,"-- [FINAL QUERY HERE]SELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf AS magnitude,     d.sigmapsf AS magnitude_error,     d.has_stamp,     d.drb AS deep_learning_real_bogus_score,     pz.sgscore1 AS star_galaxy_score_nearest,     pz.distpsnr1 AS distance_to_nearest_panstarrs_sourceFROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON d.oid = pz.oid AND d.candid = pz.candidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",advanced,54.924110889434814,2025-07-23T18:34:12,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]SELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf AS magnitude,     d.sigmapsf AS magnitude_error,     d.has_stamp,     d.drb AS deep_learning_real_bogus_score,     pz.sgscore1 AS star_galaxy_score_nearest,     pz.distpsnr1 AS distance_to_nearest_panstarrs_sourceFROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON o.oid = pz.oid AND d.candid = pz.candidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.968860626220703,2025-07-24T00:55:40,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,14,2,"-- [FINAL QUERY HERE]SELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf,     d.sigmapsf,     d.has_stamp,     d.drb,     pz.sgscore1,     pz.distpsnr1FROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON o.oid = pz.oidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",advanced,26.73567295074463,2025-07-23T18:34:39,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]SELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf,     d.sigmapsf,     d.has_stamp,     d.drb,     pz.sgscore1,     pz.distpsnr1FROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON o.oid = pz.oidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.484468936920166,2025-07-24T00:55:53,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,14,3,"-- Query to retrieve the requested information from the ALeRCE databaseSELECT     o.oid, -- Unique object identifier    d.candid, -- Candidate identifier    d.fid, -- Filter identifier    d.mjd, -- Modified Julian date    d.magpsf AS magnitude, -- Magnitude    d.sigmapsf AS magnitude_error, -- Magnitude error    d.has_stamp, -- Whether the object has stamps    d.drb AS deep_learning_real_bogus_score, -- Deep learning real bogus score    pz.sgscore1 AS star_galaxy_score, -- Star-galaxy score of the nearest object    pz.distpsnr1 AS distance_to_nearest_source -- Distance to the nearest source in Pan-STARRSFROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON d.oid = pz.oid AND d.candid = pz.candidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt') -- Filter by the list of object identifiers    AND d.drb > 0.5 -- Deep learning real bogus score greater than 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1) -- Star-galaxy score < 0.5 OR distance to nearest source < 1 arcsec","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",medium,53.588807582855225,2025-07-23T18:35:33,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve the requested information from the ALeRCE databaseSELECT     o.oid, -- Unique object identifier    d.candid, -- Candidate identifier    d.fid, -- Filter identifier    d.mjd, -- Modified Julian date    d.magpsf AS magnitude, -- Magnitude    d.sigmapsf AS magnitude_error, -- Magnitude error    d.has_stamp, -- Whether the object has stamps    d.drb AS deep_learning_real_bogus_score, -- Deep learning real bogus score    pz.sgscore1 AS star_galaxy_score, -- Star-galaxy score of the nearest object    pz.distpsnr1 AS distance_to_nearest_source -- Distance to the nearest source in Pan-STARRSFROM     object oINNER JOIN     detection d ON o.oid = d.oid -- Join detection table on object identifierINNER JOIN     ps1_ztf pz ON o.oid = pz.oid AND d.candid = pz.candid -- Join ps1_ztf table on object identifier and candidate identifierWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt') -- Filter by the list of object identifiers    AND d.drb > 0.5 -- Deep learning real bogus score greater than 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1) -- Star-galaxy score < 0.5 OR distance to nearest source < 1 arcsec]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.096912145614624,2025-07-24T00:56:07,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,14,4,"WITH selected_oids (oid) AS (    VALUES         ('ZTF23aavzgjg'),         ('ZTF23aaynzyk'),         ('ZTF23aavqxos'),         ('ZTF23aaknyni'),         ('ZTF23aavsdtc'),         ('ZTF18aandkua'),         ('ZTF23aaxfewt'),         ('ZTF23aavshwi'),         ('ZTF22aawasao'),         ('ZTF23aaxgvnt'))SELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf,     d.sigmapsf,     d.has_stamp,     d.drb,     pz.sgscore1,     pz.distpsnr1FROM     detection dINNER JOIN     selected_oids so ON d.oid = so.oidINNER JOIN     ps1_ztf pz ON d.oid = pz.oid AND d.candid = pz.candidINNER JOIN     object o ON d.oid = o.oidWHERE     d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)ORDER BY     d.mjd DESC","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",advanced,39.97315812110901,2025-07-23T18:36:13,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QueryWITH selected_oids (oid) AS (    VALUES         ('ZTF23aavzgjg'),         ('ZTF23aaynzyk'),         ('ZTF23aavqxos'),         ('ZTF23aaknyni'),         ('ZTF23aavsdtc'),         ('ZTF18aandkua'),         ('ZTF23aaxfewt'),         ('ZTF23aavshwi'),         ('ZTF22aawasao'),         ('ZTF23aaxgvnt'))SELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf,     d.sigmapsf,     d.has_stamp,     d.drb,     pz.sgscore1,     pz.distpsnr1FROM     detection dINNER JOIN     selected_oids so ON d.oid = so.oidINNER JOIN     ps1_ztf pz ON d.oid = pz.oid AND d.candid = pz.candidINNER JOIN     object o ON d.oid = o.oidWHERE     d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)ORDER BY     d.mjd DESC]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.1676926612854,2025-07-24T00:56:20,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,14,5,"-- [FINAL QUERY HERE]SELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf AS magnitude,     d.sigmapsf AS magnitude_error,     d.has_stamp,     d.drb AS deep_learning_real_bogus_score,     pz.sgscore1 AS star_galaxy_score_nearest,     pz.distpsnr1 AS distance_to_nearest_panstarrs_sourceFROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON o.oid = pz.oidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",advanced,28.05098056793213,2025-07-23T18:36:41,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected QuerySELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf AS magnitude,     d.sigmapsf AS magnitude_error,     d.has_stamp,     d.drb AS deep_learning_real_bogus_score,     pz.sgscore1 AS star_galaxy_score_nearest,     pz.distpsnr1 AS distance_to_nearest_panstarrs_sourceFROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON o.oid = pz.oidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)]
(Background on this error at: https://sqlalche.me/e/20/f405)",8.757220268249512,2025-07-24T00:56:31,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,14,6,"-- [FINAL QUERY HERE]SELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf AS magnitude,     d.sigmapsf AS magnitude_error,     d.has_stamp,     d.drb AS deep_learning_real_bogus_score,     pz.sgscore1 AS star_galaxy_score,     pz.distpsnr1 AS distance_to_nearest_sourceFROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON o.oid = pz.oidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)ORDER BY     o.oid, d.mjd","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",advanced,22.44264388084412,2025-07-23T18:37:03,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf AS magnitude,     d.sigmapsf AS magnitude_error,     d.has_stamp,     d.drb AS deep_learning_real_bogus_score,     pz.sgscore1 AS star_galaxy_score,     pz.distpsnr1 AS distance_to_nearest_sourceFROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON o.oid = pz.oidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)ORDER BY     o.oid, d.mjd]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.677887201309204,2025-07-24T00:56:47,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,14,7,"-- [FINAL QUERY HERE]SELECT     d.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf,     d.sigmapsf,     d.has_stamp,     d.drb,     pz.sgscore1,     pz.distpsnr1FROM     detection dINNER JOIN     ps1_ztf pz ON d.oid = pz.oidWHERE     d.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",advanced,33.69431519508362,2025-07-23T18:37:37,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]SELECT     d.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf,     d.sigmapsf,     d.has_stamp,     d.drb,     pz.sgscore1,     pz.distpsnr1FROM     detection dINNER JOIN     ps1_ztf pz ON     d.oid = pz.oidWHERE     d.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')     AND d.drb > 0.5     AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.515955209732056,2025-07-24T00:56:59,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,14,8,"-- [FINAL QUERY HERE]SELECT DISTINCT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf AS magnitude,     d.sigmapsf AS magnitude_error,     d.has_stamp,     d.drb AS deep_learning_real_bogus_score,     pz.sgscore1 AS star_galaxy_score,     pz.distpsnr1 AS distance_to_nearest_panstarrs_sourceFROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON d.oid = pz.oid AND d.candid = pz.candidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)ORDER BY     o.oid, d.mjd","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",advanced,25.753978729248047,2025-07-23T18:38:03,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]SELECT DISTINCT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf AS magnitude,     d.sigmapsf AS magnitude_error,     d.has_stamp,     d.drb AS deep_learning_real_bogus_score,     pz.sgscore1 AS star_galaxy_score,     pz.distpsnr1 AS distance_to_nearest_panstarrs_sourceFROM     object oINNER JOIN     detection d ON o.oid = d.oidINNER JOIN     ps1_ztf pz ON o.oid = pz.oid AND d.candid = pz.candidWHERE     o.oid IN ('ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',               'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',               'ZTF22aawasao', 'ZTF23aaxgvnt')    AND d.drb > 0.5    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)ORDER BY     o.oid, d.mjd]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.374634504318236,2025-07-24T00:57:12,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,14,9,"-- [FINAL QUERY HERE]WITH filtered_oids AS (    -- Step 2: Define the list of object identifiers    SELECT UNNEST(ARRAY['ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',                         'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',                         'ZTF22aawasao', 'ZTF23aaxgvnt']) AS oid)SELECT     d.oid,                -- Unique object identifier    d.candid,             -- Candidate identifier    d.fid,                -- Filter identifier    d.mjd,                -- Modified Julian date    d.magpsf,             -- Magnitude    d.sigmapsf,           -- Magnitude error    d.has_stamp,          -- Whether the object has stamps    d.drb,                -- Deep learning real bogus score    pz.sgscore1,          -- Star galaxy score of the nearest object in Pan-STARRS    pz.distpsnr1          -- Distance to the nearest source in Pan-STARRSFROM     detection dINNER JOIN     filtered_oids fo ON d.oid = fo.oid -- Filter by the provided list of oidsINNER JOIN     ps1_ztf pz ON d.oid = pz.oid       -- Join with Pan-STARRS dataWHERE     d.drb > 0.5                        -- Deep learning real bogus score condition    AND (        pz.sgscore1 < 0.5              -- Star galaxy score condition        OR pz.distpsnr1 < 1            -- Distance to nearest Pan-STARRS source condition    )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",advanced,30.82866668701172,2025-07-23T18:38:34,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH filtered_oids AS (      -- Step 1: Define the list of object identifiers    SELECT UNNEST(ARRAY['ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',                          'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',                          'ZTF22aawasao', 'ZTF23aaxgvnt']) AS oid)SELECT     d.oid,                -- Unique object identifier    d.candid,             -- Candidate identifier    d.fid,                -- Filter identifier    d.mjd,                -- Modified Julian date    d.magpsf,             -- Magnitude    d.sigmapsf,           -- Magnitude error    d.has_stamp,          -- Whether the object has stamps    d.drb,                -- Deep learning real bogus score    pz.sgscore1,          -- Star galaxy score of the nearest object in Pan-STARRS    pz.distpsnr1          -- Distance to the nearest source in Pan-STARRSFROM     detection dINNER JOIN     filtered_oids fo ON d.oid = fo.oid -- Filter by the provided list of oidsINNER JOIN     ps1_ztf pz ON d.oid = pz.oid       -- Join with Pan-STARRS dataWHERE     d.drb > 0.5                        -- Deep learning real bogus score condition    AND (        pz.sgscore1 < 0.5              -- Star galaxy score condition        OR pz.distpsnr1 < 1            -- Distance to nearest Pan-STARRS source condition    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.662847518920898,2025-07-24T00:57:25,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,14,10,"-- Final QueryWITH oids_list AS (    -- Step 1: Define the list of oids    SELECT UNNEST(ARRAY['ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',                         'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',                         'ZTF22aawasao', 'ZTF23aaxgvnt']) AS oid)SELECT     o.oid,     d.candid,     d.fid,     d.mjd,     d.magpsf,     d.sigmapsf,     d.has_stamp,     d.drb,     pz.sgscore1,     pz.distpsnr1FROM     oids_list olINNER JOIN     detection d ON ol.oid = d.oidINNER JOIN     ps1_ztf pz ON d.oid = pz.oidWHERE     d.drb > 0.5 -- Step 4: Filter by deep learning real bogus score    AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1) -- Step 5: Apply conditions on sgscore1 and distpsnr1ORDER BY     o.oid, d.candid -- Step 9: Sort the results","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE ps1_ztf ( /* information about the three closest sources in Pan STARRS */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    objectidps1 DOUBLE PRECISION, /* identifier of the closest source in pan starrs (ps) */\n    sgmag1 DOUBLE PRECISION, /* ps g band magnitude */\n    srmag1 DOUBLE PRECISION, /* ps r band magnitude */\n    simag1 DOUBLE PRECISION, /* ps i band magnitude */\n    szmag1 DOUBLE PRECISION, /* ps z band magnitude */\n    sgscore1 DOUBLE PRECISION, /* ps star galaxy score */\n    distpsnr1 DOUBLE PRECISION, /* distance to closest source in panstarrs */\n    objectidps2 DOUBLE PRECISION,  /* identifier of the second closest source in pan starrs (ps) */\n    sgmag2 DOUBLE PRECISION, /* g-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag2 DOUBLE PRECISION, /* r-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag2 DOUBLE PRECISION, /* i-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag2 DOUBLE PRECISION, /* z-band PSF magnitude of second closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore2 DOUBLE PRECISION, /* Star/Galaxy score of second closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr2 DOUBLE PRECISION, /* Distance to second closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    objectidps3 DOUBLE PRECISION, /* Object ID of third closest source from PS1 catalog; if exists within 30 arcsec */\n    sgmag3 DOUBLE PRECISION, /* g-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    srmag3 DOUBLE PRECISION, /* r-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    simag3 DOUBLE PRECISION, /* i-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    szmag3 DOUBLE PRECISION, /* z-band PSF magnitude of third closest source from PS1 catalog; if exists within 30 arcsec [mag] */\n    sgscore3 DOUBLE PRECISION, /* Star/Galaxy score of third closest source from PS1 catalog; if exists within 30 arcsec: 0 <= sgscore <= 1 where closer to 1 implies higher likelihood of being a star */\n    distpsnr3 DOUBLE PRECISION, /* Distance to third closest source from PS1 catalog; if exists within 30 arcsec [arcsec] */\n    nmtchps INTEGER NOT NULL, /* Number of source matches from PS1 catalog falling within 30 arcsec */\n    unique1 BOOLEAN NOT NULL, /* Whether the first closest object has changed w.r.t the first alert */\n    unique2 BOOLEAN NOT NULL, /* Whether the second closest object has changed w.r.t the first alert */\n    unique3 BOOLEAN NOT NULL /* Whether the third closest object has changed w.r.t the first alert */\n    PRIMARY KEY (oid, candid)\n);']",advanced,29.281567335128784,2025-07-23T18:39:03,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Final QueryWITH oids_list AS (      -- Step 1: Define the list of oids      SELECT UNNEST(ARRAY['ZTF23aavzgjg', 'ZTF23aaynzyk', 'ZTF23aavqxos', 'ZTF23aaknyni',                          'ZTF23aavsdtc', 'ZTF18aandkua', 'ZTF23aaxfewt', 'ZTF23aavshwi',                          'ZTF22aawasao', 'ZTF23aaxgvnt']) AS oid  )  SELECT      d.oid,  -- Object identifier      d.candid,  -- Candidate identifier      d.fid,  -- Filter identifier      d.mjd,  -- Modified Julian Date      d.magpsf,  -- Magnitude      d.sigmapsf,  -- Magnitude error      d.has_stamp,  -- Whether the object has stamps      d.drb,  -- Deep learning real bogus score      pz.sgscore1,  -- Star galaxy score of the nearest object      pz.distpsnr1  -- Distance to the nearest source in Pan-STARRS  FROM      oids_list ol  -- Sub-query containing the list of oids  INNER JOIN      detection d ON ol.oid = d.oid  -- Join with the detection table using oid  INNER JOIN      ps1_ztf pz ON d.oid = pz.oid  -- Join with the ps1_ztf table using oid  WHERE      d.drb > 0.5  -- Filter by deep learning real bogus score      AND (pz.sgscore1 < 0.5 OR pz.distpsnr1 < 1)  -- Apply conditions on sgscore1 and distpsnr1  ORDER BY      d.oid, d.candid  -- Sort the results by object identifier and candidate identifier]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.04773211479187,2025-07-24T00:57:39,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,,,12,0,"
SELECT o.oid, o.meanra, o.meandec

FROM (
SELECT
    object.oid, object.meanra, object.meandec
FROM
    object INNER JOIN
    probability
    ON object.oid = probability.oid
WHERE
    probability.classifier_name='lc_classifier'
    AND probability.class_name IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')
    AND probability.ranking = 1
    AND object.firstmjd > 59988.0
    AND object.firstmjd < 60197.0
) as o
WHERE
    q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon);
",,,,,"[             oid      meanra    meandec
0   ZTF23aazxfdh   11.327556  -2.327343
1   ZTF23aazneeg  357.339861 -17.674648
2   ZTF23aazxair   14.098124   0.520434
3   ZTF23abawaav  359.369924  -5.159571
4   ZTF23abbbrbi  358.010245  -4.224612
5   ZTF23abbbygf   16.168206  -1.053601
6   ZTF23aazwytj    0.881927 -10.744196
7   ZTF23abbkepd   13.835889   5.077601
8   ZTF23abapoiv    5.230048  -1.758021
9   ZTF23abbjstt   13.706127  -3.710276
10  ZTF23ababooa  347.699685 -15.441363
11  ZTF23aazkvym  357.860400 -11.907847
12  ZTF23abbbybs   12.780815  -5.443683
13  ZTF23abaychv   12.394942  -3.037759
14  ZTF23aaovxwf  351.140762 -19.056710
15  ZTF23aapnlvr  352.465073 -11.202974
16  ZTF23aaowayh  356.647299 -13.542643
17  ZTF23aapvrkk    0.175006 -12.236802
18  ZTF23aapvzyq  359.503657 -11.916706
19  ZTF23aaohpnv    8.491958   4.082251
20  ZTF23aapgxic    7.748520   5.157252
21  ZTF23aapqtxd    8.879058   2.147919
22  ZTF23abbygzm  343.960147 -17.448733
23  ZTF23abcvivc  358.337513  -5.886772
24  ZTF23aaqixha    8.509318  -9.703939
25  ZTF23aazxiuu    6.501685  -0.884798
26  ZTF23aaqixyp    6.388770  -7.758614
27  ZTF23abbefkk    9.982778   6.622644
28  ZTF23aazwshk   10.101225   4.791153
29  ZTF23abawaqe  352.826653 -18.783349
30  ZTF23aaqygof  345.346057 -18.765263
31  ZTF23aapwihe   17.827492   0.742945
32  ZTF23aaretvs   15.263196  -2.912866
33  ZTF23aarfbvs   11.196881  -2.378468
34  ZTF23aarffak  356.743944 -19.262242
35  ZTF23aarfpck    6.464097   2.183000
36  ZTF23aaqluoo  358.419121 -17.190397
37  ZTF23aascfrd  354.052083  -7.437187
38  ZTF23abbbomo  345.634527 -19.724748
39  ZTF23aapgjtm  351.100632 -14.425906
40  ZTF23aasyvbf    9.411387  -4.281495
41  ZTF23aatzjdo    1.226893 -13.502189
42  ZTF23aaovzyu  349.534040 -12.976046
43  ZTF23aaumlxn    6.423729  -1.050326
44  ZTF23aaaweph    1.307964 -11.502395
45  ZTF23aaaweph    1.307964 -11.502395
46  ZTF23aazsfpa  356.794110 -16.513073
47  ZTF23abbjtdn    6.232715   1.033046
48  ZTF23aavlyvc  359.897395  -6.376741
49  ZTF23aavmycb    7.102145   0.441236
50  ZTF23aawqydv   19.468501   0.780816
51  ZTF23aaxavca    9.017651   1.801565
52  ZTF23aaxavca    9.017651   1.801565
53  ZTF23aaxbfyp    4.112309 -10.371170
54  ZTF23aaxbfzl   16.973081   1.732003
55  ZTF23aaxtrgs    1.760985  -9.567699
56  ZTF23abbitkh   10.628642   8.028922
57  ZTF23aaxtdpc    9.048410  -2.151892
58  ZTF22abrrqkf  351.152588 -13.510948]",,56.65815281867981,2025-07-24T00:58:36,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,12,1,"SELECT o.oid, o.meanra, o.meandecFROM object oWHERE o.firstmjd BETWEEN 59988.0 AND 60197.0  AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  AND EXISTS (    SELECT 1    FROM probability p    WHERE p.oid = o.oid      AND p.classifier_name = 'lc_classifier'      AND p.ranking = 1      AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,5.922004222869873,2025-07-23T18:40:19,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected QuerySELECT     o.oid,     o.meanra,     o.meandecFROM     object oWHERE     o.firstmjd BETWEEN 59988.0 AND 60197.0  -- Filter for first detection between February 13 and September 10    AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  -- Filter for objects within the specified polygon    AND EXISTS (        SELECT 1        FROM probability p        WHERE             p.oid = o.oid  -- Join condition between object and probability tables            AND p.classifier_name = 'lc_classifier'  -- Default condition for classifier            AND p.ranking = 1  -- Default condition for ranking            AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  -- Filter for SNe classes    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",20.3196988105774,2025-07-24T00:59:16,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,12,2,"SELECT     object.oid,     object.meanra,     object.meandecFROM     objectINNER JOIN     probability ON     object.oid = probability.oidWHERE     probability.ranking = 1    AND probability.classifier_name = 'lc_classifier'    AND probability.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN') -- SNe types    AND object.firstmjd BETWEEN 59988.0 AND 60197.0 -- February 13 to September 10    AND q3c_poly_query(object.meanra, object.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.423312902450561,2025-07-23T18:40:22,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     object.oid,     object.meanra,     object.meandecFROM     objectINNER JOIN     probability ON     object.oid = probability.oidWHERE     probability.ranking = 1 -- Default condition for ranking    AND probability.classifier_name = 'lc_classifier' -- Default condition for classifier    AND probability.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN') -- SNe types    AND object.firstmjd BETWEEN 59988.0 AND 60197.0 -- February 13 to September 10    AND q3c_poly_query(object.meanra, object.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon) -- Spatial filter]
(Background on this error at: https://sqlalche.me/e/20/f405)",8.814537525177002,2025-07-24T00:59:44,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,12,3,"SELECT o.oid, o.meanra, o.meandecFROM object oWHERE o.firstmjd BETWEEN 59988.0 AND 60197.0  AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  AND o.oid IN (    SELECT p.oid    FROM probability p    WHERE p.classifier_name = 'lc_classifier'      AND p.ranking = 1      AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,4.393863916397095,2025-07-23T18:40:27,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid,     o.meanra,     o.meandecFROM     object oWHERE     o.firstmjd BETWEEN 59988.0 AND 60197.0  -- Filter for first detection between February 13 and September 10    AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  -- Filter for objects within the specified polygon    AND o.oid IN (        SELECT             p.oid        FROM             probability p        WHERE             p.classifier_name = 'lc_classifier'  -- Use the light curve classifier            AND p.ranking = 1  -- Only consider the most likely probabilities            AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  -- Filter for SNe classes    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",8.614341259002686,2025-07-24T01:00:12,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,12,4,"SELECT o.oid, o.meanra, o.meandecFROM object oWHERE o.firstmjd BETWEEN 59988.0 AND 60197.0  AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  AND EXISTS (    SELECT 1    FROM probability p    WHERE p.oid = o.oid      AND p.classifier_name = 'lc_classifier'      AND p.ranking = 1      AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,4.239537954330444,2025-07-23T18:40:31,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected QuerySELECT     o.oid,     o.meanra,     o.meandecFROM     object oWHERE     o.firstmjd BETWEEN 59988.0 AND 60197.0  -- Filter for first detection between February 13 and September 10    AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  -- Filter for objects within the specified polygon    AND EXISTS (        SELECT 1        FROM probability p        WHERE             p.oid = o.oid  -- Join condition between object and probability tables            AND p.classifier_name = 'lc_classifier'  -- Default condition for classifier            AND p.ranking = 1  -- Default condition for ranking            AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  -- Filter for SNe classes    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",8.419580936431885,2025-07-24T01:00:41,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,12,5,"SELECT o.oid, o.meanra, o.meandecFROM object oWHERE o.firstmjd BETWEEN 59988.0 AND 60197.0  AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  AND o.oid IN (    SELECT p.oid    FROM probability p    WHERE p.classifier_name = 'lc_classifier'      AND p.ranking = 1      AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,4.448026418685913,2025-07-23T18:40:35,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid,     o.meanra,     o.meandecFROM     object oWHERE     o.firstmjd BETWEEN 59988.0 AND 60197.0  -- Filter for first detection between February 13 and September 10    AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  -- Filter for objects within the specified polygon    AND o.oid IN (        SELECT             p.oid        FROM             probability p        WHERE             p.classifier_name = 'lc_classifier'  -- Use the light curve classifier            AND p.ranking = 1  -- Only consider the most likely probabilities            AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  -- Filter for SNe classes    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",8.591416597366333,2025-07-24T01:01:10,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,12,6,"SELECT o.oid, o.meanra, o.meandecFROM object oWHERE o.firstmjd BETWEEN 59988.0 AND 60197.0  AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  AND o.oid IN (    SELECT p.oid    FROM probability p    WHERE p.classifier_name = 'lc_classifier'      AND p.ranking = 1      AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.597583293914795,2025-07-23T18:40:39,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid,     o.meanra,     o.meandecFROM     object oWHERE     o.firstmjd BETWEEN 59988.0 AND 60197.0  -- Filter for first detection between February 13 and September 10    AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  -- Filter for objects within the specified polygon    AND o.oid IN (        SELECT             p.oid        FROM             probability p        WHERE             p.classifier_name = 'lc_classifier'  -- Use the light curve classifier            AND p.ranking = 1  -- Only consider the most likely probabilities            AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  -- Filter for SNe classes    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",8.699922561645508,2025-07-24T01:01:40,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,12,7,"SELECT o.oid, o.meanra, o.meandecFROM object oWHERE o.firstmjd BETWEEN 59988.0 AND 60197.0  AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  AND o.oid IN (    SELECT p.oid    FROM probability p    WHERE p.classifier_name = 'lc_classifier'      AND p.ranking = 1      AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.403985977172852,2025-07-23T18:40:43,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid,     o.meanra,     o.meandecFROM     object oWHERE     o.firstmjd BETWEEN 59988.0 AND 60197.0  -- Filter for first detection between February 13 and September 10    AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  -- Filter for objects within the specified polygon    AND o.oid IN (        SELECT             p.oid        FROM             probability p        WHERE             p.classifier_name = 'lc_classifier'  -- Use the light curve classifier            AND p.ranking = 1  -- Only consider the most likely probabilities            AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  -- Filter for SNe classes    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.720593452453612,2025-07-24T01:02:09,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,12,8,"SELECT o.oid, o.meanra, o.meandecFROM object oWHERE o.firstmjd BETWEEN 59988.0 AND 60197.0  AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  AND EXISTS (    SELECT 1    FROM probability p    WHERE p.oid = o.oid      AND p.classifier_name = 'lc_classifier'      AND p.ranking = 1      AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.277968645095825,2025-07-23T18:40:46,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected QuerySELECT     o.oid,     o.meanra,     o.meandecFROM     object oWHERE     o.firstmjd BETWEEN 59988.0 AND 60197.0  -- Filter for first detection between February 13 and September 10    AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  -- Filter for objects within the specified polygon    AND EXISTS (        SELECT 1        FROM probability p        WHERE             p.oid = o.oid  -- Join condition between object and probability tables            AND p.classifier_name = 'lc_classifier'  -- Default condition for classifier_name            AND p.ranking = 1  -- Default condition for ranking            AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  -- Filter for SNe classes    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.512069463729858,2025-07-24T01:02:41,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,12,9,"SELECT o.oid, o.meanra, o.meandecFROM object oWHERE o.firstmjd BETWEEN 59988.0 AND 60197.0  AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  AND o.oid IN (    SELECT p.oid    FROM probability p    WHERE p.classifier_name = 'lc_classifier'      AND p.ranking = 1      AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,4.02215838432312,2025-07-23T18:40:50,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected QuerySELECT     o.oid,     o.meanra,     o.meandecFROM     object oWHERE     o.firstmjd BETWEEN 59988.0 AND 60197.0  -- Filter for first detection between February 13 and September 10    AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  -- Filter for objects within the specified polygon    AND o.oid IN (        SELECT             p.oid        FROM             probability p        WHERE             p.classifier_name = 'lc_classifier'  -- Use the light curve classifier            AND p.ranking = 1  -- Only consider the most likely probabilities            AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  -- Filter for SNe classes    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.537033081054688,2025-07-24T01:03:14,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,12,10,"SELECT o.oid, o.meanra, o.meandecFROM object oWHERE o.firstmjd BETWEEN 59988.0 AND 60197.0  AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  AND o.oid IN (    SELECT p.oid    FROM probability p    WHERE p.classifier_name = 'lc_classifier'      AND p.ranking = 1      AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  )","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.1873936653137207,2025-07-23T18:40:53,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected QuerySELECT     o.oid,     o.meanra,     o.meandecFROM     object oWHERE     o.firstmjd BETWEEN 59988.0 AND 60197.0  -- Filter for first detection between February 13 and September 10    AND q3c_poly_query(o.meanra, o.meandec, '((-20, -20), (-2, -20), (20, 1), (10, 10))'::polygon)  -- Filter for objects within the specified polygon    AND o.oid IN (        SELECT             p.oid        FROM             probability p        WHERE             p.classifier_name = 'lc_classifier'  -- Use the light curve classifier            AND p.ranking = 1  -- Only consider the most likely probabilities            AND p.class IN ('SNIa', 'SNIbc', 'SNII', 'SLSN')  -- Filter for SNe classes    )]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.624420166015623,2025-07-24T01:03:45,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,,,89,0,"SELECT
    *
FROM
    dataquality
WHERE
    oid in
(
SELECT
    oid
FROM
    probability
WHERE
    classifier_name = 'stamp_classifier'
    AND class_name = 'SN'
    AND probability > 0.7
LIMIT 50
)",,,,,"[              oid               candid  fid       xpos       ypos    chipsf  \
0    ZTF19abpjeuk   953435275715015007    1  2613.9626  1525.6978  0.997162   
1    ZTF19abnaqzw   939470631215015031    2  1539.3900   816.3410  3.252370   
2    ZTF19abnaqzw   945386951215015024    2  1538.1711   810.3942  2.489448   
3    ZTF19abnaqzw   961396851215015007    2  1516.2863   812.7285  2.058304   
4    ZTF19abnaqzw  1306437221215015012    2  1551.2731   810.2494  3.125942   
..            ...                  ...  ...        ...        ...       ...   
146  ZTF18abompcf   592364402215015009    1  2072.9500   665.4680  2.819600   
147  ZTF18abompcf   597435642215015011    1  2083.1038   710.4153  2.804480   
148  ZTF19abmmdti   944402191015015027    2  2828.9617  2836.0317  0.957161   
149  ZTF19abrbcsq   963300044015015016    1   184.8774  2264.5027  1.306890   
150  ZTF19abnaurm   945392260815015006    2  2376.3300  1317.3752  1.994859   

          sky     fwhm  classtar  mindtoedge  ...  magzpsciunc  magzpscirms  \
0    0.484638  2.12000     0.959    458.5373  ...     0.000022     0.039557   
1    0.552332  3.23000     0.951    816.3410  ...     0.000002     0.014123   
2    0.603628  2.92000     0.904    810.3942  ...     0.000005     0.029991   
3    0.427992  2.91000     0.784    812.7285  ...     0.000002     0.018514   
4    0.589602  2.35000     0.672    810.2494  ...     0.000002     0.018825   
..        ...      ...       ...         ...  ...          ...          ...   
146  0.464546  1.28757     0.608    665.4680  ...     0.000000     0.000000   
147  0.698340  3.04000     0.843    710.4153  ...     0.000004     0.024716   
148 -0.117639  2.41000     0.756    243.5383  ...     0.000003     0.037270   
149  0.224807  2.52000     0.956    184.8774  ...     0.000010     0.034829   
150 -0.106622  2.11000     0.978    696.1699  ...     0.000004     0.039432   

     nmatches  clrcoeff  clrcounc  zpclrcov    zpmed  clrmed    clrrms  \
0       386.0 -0.074351  0.000025 -0.000022  26.1495   0.850  0.319662   
1         NaN  0.073896  0.000004       NaN      NaN     NaN       NaN   
2      2059.0  0.091907  0.000015 -0.000009  26.0980   0.546  0.150992   
3      2066.0  0.076245  0.000005 -0.000003  26.1970   0.546  0.149623   
4      2056.0  0.071884  0.000005 -0.000003  26.3240   0.546  0.150210   
..        ...       ...       ...       ...      ...     ...       ...   
146       NaN  0.000000  0.000000       NaN      NaN     NaN       NaN   
147    1906.0 -0.063646  0.000005 -0.000004  26.2220   0.809  0.210092   
148    1203.0  0.099882  0.000005 -0.000004  26.0670   0.575  0.292729   
149    1255.0 -0.077774  0.000015 -0.000012  26.1570   0.745  0.223491   
150     706.0  0.103259  0.000006 -0.000005  26.1860   0.642  0.319781   

     exptime  
0       30.0  
1        NaN  
2       30.0  
3       30.0  
4       30.0  
..       ...  
146      NaN  
147      0.0  
148     30.0  
149     30.0  
150     30.0  

[151 rows x 32 columns]]",,4.672346115112305,2025-07-24T01:03:50,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,89,1,-- Retrieve at most 50 ZTF objects classified as supernovae (SN) with a probability > 0.7-- in the stamp_classifier and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN probability p    ON dq.oid = p.oidWHERE p.class_name = 'SN' -- Filter for supernovae classification  AND p.classifier_name = 'stamp_classifier' -- Use the stamp classifier  AND p.ranking = 1 -- Only consider the most likely classification  AND p.probability > 0.7 -- Probability thresholdLIMIT 50 -- Limit the results to at most 50 rows,"['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,27.96042251586914,2025-07-23T18:50:46,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve at most 50 ZTF objects classified as supernovae (SN) with a probability > 0.7-- in the stamp_classifier and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN probability p    ON dq.oid = p.oidWHERE p.class_name = 'SN' -- Filter for supernovae classification  AND p.classifier_name = 'stamp_classifier' -- Use the stamp classifier  AND p.ranking = 1 -- Only consider the most likely classification  AND p.probability > 0.7 -- Probability thresholdLIMIT 50 -- Limit the results to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.14161491394043,2025-07-24T01:04:07,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,89,2,"-- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the stamp_classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN'      AND classifier_name = 'stamp_classifier'      AND probability > 0.7      AND ranking = 1) p ON dq.oid = p.oidLIMIT 50","['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,22.85085701942444,2025-07-23T18:51:09,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the stamp_classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN' -- Correct class name for supernovae in the stamp_classifier      AND classifier_name = 'stamp_classifier' -- Correct classifier name      AND probability > 0.7 -- Probability condition      AND ranking = 1 -- Default condition for ranking) p ON dq.oid = p.oid -- Join condition to match objectsLIMIT 50 -- Limit the result to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.764176845550535,2025-07-24T01:04:23,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,89,3,"-- Retrieve at most 50 ZTF objects classified as supernovae (SN) by the stamp_classifier-- with a probability greater than 0.7, returning all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN'      AND classifier_name = 'stamp_classifier'      AND probability > 0.7      AND ranking = 1) filtered_probabilitiesON dq.oid = filtered_probabilities.oidLIMIT 50","['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,22.29758334159851,2025-07-23T18:51:31,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve at most 50 ZTF objects classified as supernovae (SN) by the stamp_classifier-- with a probability greater than 0.7, returning all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN' -- Correct class name for supernovae in the stamp_classifier      AND classifier_name = 'stamp_classifier' -- Correct classifier name      AND probability > 0.7 -- Probability condition      AND ranking = 1 -- Default condition for ranking) filtered_probabilitiesON dq.oid = filtered_probabilities.oid -- Correct join conditionLIMIT 50 -- Limit the result to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.907499074935911,2025-07-24T01:04:39,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,89,4,"-- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the stamp_classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN'      AND classifier_name = 'stamp_classifier'      AND probability > 0.7      AND ranking = 1) p ON dq.oid = p.oidLIMIT 50","['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,21.27705931663513,2025-07-23T18:51:53,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the stamp_classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN' -- Correct class name for supernovae in the stamp_classifier      AND classifier_name = 'stamp_classifier' -- Correct classifier name      AND probability > 0.7 -- Probability condition      AND ranking = 1 -- Default condition for ranking) p ON dq.oid = p.oid -- Join condition to match objectsLIMIT 50 -- Limit the result to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.455259561538696,2025-07-24T01:04:55,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,89,5,"-- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the 'stamp_classifier' -- with a probability greater than 0.7, and return all columns from the 'dataquality' table.SELECT dq.*FROM dataquality dqINNER JOIN probability p    ON dq.oid = p.oidWHERE p.classifier_name = 'stamp_classifier' -- Use the stamp classifier  AND p.class_name = 'SN'                   -- Classify as supernova ('SN')  AND p.ranking = 1                         -- Only the most likely classification  AND p.probability > 0.7                   -- Probability greater than 0.7LIMIT 50                                   -- Limit the results to at most 50 rows","['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,22.14957046508789,2025-07-23T18:52:15,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT dq.*FROM dataquality dqINNER JOIN probability p    ON dq.oid = p.oidWHERE p.classifier_name = 'stamp_classifier' -- Use the stamp classifier  AND p.class_name = 'SN'                   -- Classify as supernova ('SN')  AND p.ranking = 1                         -- Only the most likely classification  AND p.probability > 0.7                   -- Probability greater than 0.7LIMIT 50                                   -- Limit the results to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.63313364982605,2025-07-24T01:05:11,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,89,6,"-- Retrieve at most 50 ZTF objects classified as supernovae (SN) by the stamp_classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE classifier_name = 'stamp_classifier' -- Use the stamp classifier      AND class_name = 'SN' -- Classify as supernovae      AND probability > 0.7 -- Probability greater than 0.7      AND ranking = 1 -- Only the most likely classification) p ON dq.oid = p.oidLIMIT 50 -- Limit the results to at most 50 rows","['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,22.459919214248657,2025-07-23T18:52:38,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve at most 50 ZTF objects classified as supernovae (SN) by the stamp_classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE classifier_name = 'stamp_classifier' -- Use the stamp classifier      AND class_name = 'SN' -- Classify as supernovae      AND probability > 0.7 -- Probability greater than 0.7      AND ranking = 1 -- Only the most likely classification) p ON dq.oid = p.oidLIMIT 50 -- Limit the results to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.347856760025024,2025-07-24T01:05:29,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,89,7,"-- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the stamp classifier-- with a probability greater than 0.7, and return all columns from the 'dataquality' table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN' -- Filter for supernovae classification      AND classifier_name = 'stamp_classifier' -- Use the stamp classifier      AND probability > 0.7 -- Probability threshold      AND ranking = 1 -- Only the most likely classification) p ON dq.oid = p.oidLIMIT 50 -- Limit the results to at most 50 rows","['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,22.43987345695496,2025-07-23T18:53:02,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the stamp classifier-- with a probability greater than 0.7, and return all columns from the 'dataquality' table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN' -- Filter for supernovae classification      AND classifier_name = 'stamp_classifier' -- Use the stamp classifier      AND probability > 0.7 -- Probability threshold      AND ranking = 1 -- Only the most likely classification) p ON dq.oid = p.oidLIMIT 50 -- Limit the results to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.917943000793455,2025-07-24T01:05:45,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,89,8,"-- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the 'stamp_classifier'-- with a probability greater than 0.7 and ranking equal to 1, returning all columns from the 'dataquality' table.SELECT dq.*FROM dataquality dqINNER JOIN probability p    ON dq.oid = p.oidWHERE p.classifier_name = 'stamp_classifier' -- Use the stamp classifier  AND p.class_name = 'SN'                   -- Classify as supernovae  AND p.ranking = 1                         -- Only the most likely classification  AND p.probability > 0.7                   -- Probability greater than 0.7LIMIT 50                                   -- Limit the results to at most 50 rows","['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,19.49210286140442,2025-07-23T18:53:21,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT dq.*FROM dataquality dqINNER JOIN probability p    ON dq.oid = p.oidWHERE p.classifier_name = 'stamp_classifier' -- Use the stamp classifier  AND p.class_name = 'SN'                   -- Classify as supernovae  AND p.ranking = 1                         -- Only the most likely classification  AND p.probability > 0.7                   -- Probability greater than 0.7LIMIT 50                                   -- Limit the results to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",16.941734313964844,2025-07-24T01:06:06,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,89,9,"-- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the stamp classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN' -- Filter for supernovae      AND classifier_name = 'stamp_classifier' -- Use the stamp classifier      AND probability > 0.7 -- Probability threshold      AND ranking = 1 -- Only the most likely classification) p ON dq.oid = p.oidLIMIT 50 -- Limit the results to at most 50 rows","['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,18.65030217170716,2025-07-23T18:53:40,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve at most 50 ZTF objects classified as supernovae ('SN') by the stamp classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN' -- Filter for supernovae      AND classifier_name = 'stamp_classifier' -- Use the stamp classifier      AND probability > 0.7 -- Probability threshold      AND ranking = 1 -- Only the most likely classification) p ON dq.oid = p.oidLIMIT 50 -- Limit the results to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.683478116989136,2025-07-24T01:06:23,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,89,10,"-- Retrieve at most 50 ZTF objects classified as supernovae (SN) by the stamp_classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN' -- Filter for supernovae classification      AND classifier_name = 'stamp_classifier' -- Use the stamp classifier      AND probability > 0.7 -- Probability threshold      AND ranking = 1 -- Most likely classification) p ON dq.oid = p.oidLIMIT 50 -- Limit the results to at most 50 rows","['CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE dataquality (\n    candid BIGINT PRIMARY KEY, /* unique identifier for the subtraction candidate */\n    oid VARCHAR NOT NULL, /* unique identifier for this object */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    xpos DOUBLE PRECISION, /* x-image position of candidate [pixels] */\n    ypos DOUBLE PRECISION, /* y-image position of candidate [pixels] */\n    chipsf DOUBLE PRECISION, /* Reduced chi-square for PSF-fit */\n    sky DOUBLE PRECISION, /* Local sky background estimate [DN] */\n    fwhm DOUBLE PRECISION, /* Full Width Half Max assuming a Gaussian core, from SExtractor [pixels] */\n    classtar DOUBLE PRECISION, /* Star/Galaxy classification score from SExtractor */\n    mindtoedge DOUBLE PRECISION, /* Distance to nearest edge in image [pixels] */\n    seeratio DOUBLE PRECISION, /* Ratio: difffwhm / fwhm */\n    aimage DOUBLE PRECISION, /* Windowed profile RMS afloat major axis from SExtractor [pixels] */\n    bimage DOUBLE PRECISION, /* Windowed profile RMS afloat minor axis from SExtractor [pixels] */\n    aimagerat DOUBLE PRECISION, /* Ratio: aimage / fwhm */\n    bimagerat DOUBLE PRECISION, /* Ratio: bimage / fwhm */\n    nneg INTEGER, /* number of negative pixels in a 5 x 5 pixel stamp */\n    nbad INTEGER, /* number of prior-tagged bad pixels in a 5 x 5 pixel stamp */\n    sumrat DOUBLE PRECISION, /* Ratio: sum(pixels) / sum(abs(pixels)) in a 5 x 5 pixel stamp where stamp is first median-filtered to mitigate outliers */\n    scorr DOUBLE PRECISION, /* Peak-pixel signal-to-noise ratio in point source matched-filtered detection image */\n    dsnrms DOUBLE PRECISION, /* Ratio: D/stddev(D) on event position where D = difference image */\n    ssnrms DOUBLE PRECISION, /* Ratio: S/stddev(S) on event position where S = image of convolution: D (x) PSF(D) */\n    magzpsci DOUBLE PRECISION, /* Magnitude zero point for photometry estimates [mag] */\n    magzpsciunc DOUBLE PRECISION, /* Magnitude zero point uncertainty (in magzpsci) [mag] */\n    magzpscirms DOUBLE PRECISION, /* RMS (deviation from average) in all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    nmatches INTEGER, /* Number of PS1 photometric calibrators used to calibrate science image from science image processing */\n    clrcoeff DOUBLE PRECISION, /* Color coefficient from linear fit from photometric calibration of science image */\n    clrcounc DOUBLE PRECISION, /* Color coefficient uncertainty from linear fit (corresponding to clrcoeff) */\n    zpclrcov DOUBLE PRECISION, /* Covariance in magzpsci and clrcoeff from science image processing [mag^2] */\n    zpmed DOUBLE PRECISION, /* Magnitude zero point from median of all differences between instrumental photometry and matched photometric calibrators from science image processing [mag] */\n    clrmed DOUBLE PRECISION, /* Median color of all PS1 photometric calibrators used from science image processing [mag]: for filter (fid) = 1, 2, 3, PS1 color used = g-r, g-r, r-i respectively */\n    clrrms DOUBLE PRECISION, /* RMS color (deviation from average) of all PS1 photometric calibrators used from science image processing [mag] */\n    exptime DOUBLE PRECISION /* Integration time of camera exposure [sec] */\n    FOREIGN KEY (candid, oid) REFERENCES detection(candid, oid)\n);\n']",medium,22.56733012199402,2025-07-23T18:54:03,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve at most 50 ZTF objects classified as supernovae (SN) by the stamp_classifier-- with a probability greater than 0.7, and return all columns from the dataquality table.SELECT dq.*FROM dataquality dqINNER JOIN (    SELECT oid    FROM probability    WHERE class_name = 'SN' -- Filter for supernovae classification      AND classifier_name = 'stamp_classifier' -- Use the stamp classifier      AND probability > 0.7 -- Probability threshold      AND ranking = 1 -- Most likely classification) p ON dq.oid = p.oidLIMIT 50 -- Limit the results to at most 50 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",16.44312047958374,2025-07-24T01:06:45,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,,,92,0,"SELECT
    oid, classifier_version, class_name, probability
FROM
    probability
WHERE
    classifier_name = 'lc_classifier'
    AND ranking = 1
    AND oid in
(
SELECT
    oid
FROM
    magstat
WHERE
    fid = 1
    AND ndet >= 10
    AND ndubious = 0
ORDER BY oid
LIMIT 500
)
",,,,,"[              oid     classifier_version      class_name  probability
0    ZTF17aaaaaxb  hierarchical_rf_1.1.0  Periodic-Other     0.402136
1    ZTF17aaaaaxb   lc_classifier_1.1.13  Periodic-Other     0.307064
2    ZTF17aaaadiz  hierarchical_rf_1.1.0               E     0.282672
3    ZTF17aaaadiz   lc_classifier_1.1.13  Periodic-Other     0.258560
4    ZTF17aaaadyg  hierarchical_rf_1.1.0  Periodic-Other     0.553136
..            ...                    ...             ...          ...
940  ZTF17aaaaaas   lc_classifier_1.1.13  Periodic-Other     0.254528
941  ZTF17aaaaegw  hierarchical_rf_1.1.0             YSO     0.717024
942  ZTF17aaaaegw   lc_classifier_1.1.13             YSO     0.604632
943  ZTF17aaaabel  hierarchical_rf_1.1.0               E     0.371840
944  ZTF17aaaabel   lc_classifier_1.1.13  Periodic-Other     0.439200

[945 rows x 4 columns]]",,4.940483331680298,2025-07-24T01:06:50,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,92,1,"-- Query to retrieve at most 500 ZTF objects with at least 10 detections in the g band,-- no dubious corrections in that filter, and classification probabilities with ranking 1-- for the light curve classifier.SELECT     p.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     probability p-- Join with a subquery to filter objects with at least 10 detections in the g band and no dubious correctionsINNER JOIN (    SELECT         d.oid    FROM         detection d    WHERE         d.fid = 1 -- g band        AND d.dubious = FALSE -- no dubious corrections    GROUP BY         d.oid    HAVING         COUNT(d.oid) >= 10 -- at least 10 detections) filtered_objects ON p.oid = filtered_objects.oidWHERE     p.ranking = 1 -- only the most likely classification    AND p.classifier_name = 'lc_classifier' -- light curve classifierORDER BY     p.oid ASC -- order by ZTF identifierLIMIT 500 -- limit to at most 500 results","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,23.453742027282715,2025-07-23T19:11:58,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query-- This query retrieves at most 500 ZTF objects with at least 10 detections in the g band,-- no dubious corrections in that filter, and classification probabilities with ranking 1-- for the light curve classifier.SELECT     p.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     probability p-- Join with a subquery to filter objects with at least 10 detections in the g band and no dubious correctionsINNER JOIN (    SELECT         d.oid    FROM         detection d    WHERE         d.fid = 1 -- g band        AND d.dubious = FALSE -- no dubious corrections    GROUP BY         d.oid    HAVING         COUNT(d.oid) >= 10 -- at least 10 detections) filtered_objects ON     p.oid = filtered_objects.oidWHERE     p.ranking = 1 -- only the most likely classification    AND p.classifier_name = 'lc_classifier' -- light curve classifierORDER BY     p.oid ASC -- order by ZTF identifierLIMIT 500 -- limit to at most 500 results]
(Background on this error at: https://sqlalche.me/e/20/f405)",13.681592226028442,2025-07-24T01:07:09,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,92,2,"-- Query to retrieve at most 500 ZTF objects with at least 10 detections in the g band,-- no dubious corrections in that filter, and probabilities with ranking 1 for the light curve classifier.SELECT     o.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     object o-- Join with a subquery to filter detections in the g band with no dubious correctionsINNER JOIN (    SELECT         d.oid    FROM         detection d    WHERE         d.fid = 1 -- g band        AND d.dubious = FALSE    GROUP BY         d.oid    HAVING         COUNT(d.oid) >= 10 -- At least 10 detections) d_filtered ON o.oid = d_filtered.oid-- Join with the probability table to filter by ranking and classifierINNER JOIN probability p ON o.oid = p.oidWHERE     p.ranking = 1 -- Only the most likely class    AND p.classifier_name = 'lc_classifier' -- Light curve classifierORDER BY     o.oid ASC -- Order by ZTF identifierLIMIT 500 -- Limit to at most 500 results","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,27.30911874771118,2025-07-23T19:12:25,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve at most 500 ZTF objects with at least 10 detections in the g band,-- no dubious corrections in that filter, and probabilities with ranking 1 for the light curve classifier.SELECT     o.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     object o-- Join with a subquery to filter detections in the g band with no dubious correctionsINNER JOIN (    SELECT         d.oid    FROM         detection d    WHERE         d.fid = 1 -- g band        AND d.dubious = FALSE -- No dubious corrections    GROUP BY         d.oid    HAVING         COUNT(d.oid) >= 10 -- At least 10 detections) d_filtered ON o.oid = d_filtered.oid-- Join with the probability table to filter by ranking and classifierINNER JOIN probability p ON o.oid = p.oidWHERE     p.ranking = 1 -- Only the most likely class    AND p.classifier_name = 'lc_classifier' -- Light curve classifierORDER BY     o.oid ASC -- Order by ZTF identifierLIMIT 500 -- Limit to at most 500 results]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.441815853118896,2025-07-24T01:07:25,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,92,3,"-- Retrieve at most 500 ZTF objects ordered by their oids, with at least 10 detections in the g band,-- no dubious corrections in that filter, and classification probabilities with ranking 1 for the light curve classifier.WITH filtered_detections AS (    -- Subquery to filter objects with at least 10 detections in the g band and no dubious corrections    SELECT        oid    FROM        detection    WHERE        fid = 1 -- g band        AND dubious = FALSE    GROUP BY        oid    HAVING        COUNT(*) >= 10),filtered_probabilities AS (    -- Subquery to filter classification probabilities with ranking 1 for the light curve classifier    SELECT        oid,        classifier_version,        class_name,        probability    FROM        probability    WHERE        ranking = 1        AND classifier_name = 'lc_classifier')-- Combine the filtered detections and probabilities, and limit the results to 500 rowsSELECT    p.oid,    p.classifier_version,    p.class_name,    p.probabilityFROM    filtered_detections dINNER JOIN    filtered_probabilities pON    d.oid = p.oidORDER BY    p.oid ASCLIMIT 500","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,21.42437148094177,2025-07-23T19:12:47,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve at most 500 ZTF objects ordered by their oids, with at least 10 detections in the g band,-- no dubious corrections in that filter, and classification probabilities with ranking 1 for the light curve classifier.WITH filtered_detections AS (    -- Subquery to filter objects with at least 10 detections in the g band and no dubious corrections    SELECT        oid    FROM        detection    WHERE        fid = 1 -- g band        AND dubious = FALSE    GROUP BY        oid    HAVING        COUNT(*) >= 10),filtered_probabilities AS (    -- Subquery to filter classification probabilities with ranking 1 for the light curve classifier    SELECT        oid,        classifier_version,        class_name,        probability    FROM        probability    WHERE        ranking = 1        AND classifier_name = 'lc_classifier')-- Combine the filtered detections and probabilities, and limit the results to 500 rowsSELECT    p.oid,    p.classifier_version,    p.class_name,    p.probabilityFROM    filtered_detections dINNER JOIN    filtered_probabilities pON    d.oid = p.oidORDER BY    p.oid ASCLIMIT 500]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.549875497817991,2025-07-24T01:07:41,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,92,4,"-- Retrieve at most 500 ZTF objects ordered by their oids, with at least 10 detections in the g band,-- no dubious corrections in that filter, and classification probabilities with ranking 1 for the light curve classifier.WITH filtered_objects AS (    -- Step 1: Filter objects with at least 10 detections in the g band and no dubious corrections    SELECT        d.oid    FROM        detection d    WHERE        d.fid = 1 -- g band        AND d.dubious = FALSE -- no dubious corrections    GROUP BY        d.oid    HAVING        COUNT(*) >= 10 -- at least 10 detections),classified_objects AS (    -- Step 2: Retrieve classification information for objects with ranking 1 and lc_classifier    SELECT        p.oid,        p.class_name,        p.classifier_version,        p.probability    FROM        probability p    WHERE        p.ranking = 1 -- most likely classification        AND p.classifier_name = 'lc_classifier' -- light curve classifier)-- Step 3: Join filtered objects with classification information and limit resultsSELECT    fo.oid AS ztf_identifier,    co.classifier_version,    co.class_name,    co.probabilityFROM    filtered_objects foINNER JOIN    classified_objects coON    fo.oid = co.oidORDER BY    fo.oid ASC -- order by oidLIMIT 500 -- limit to 500 results","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,21.43982100486756,2025-07-23T19:13:08,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve at most 500 ZTF objects ordered by their oids, with at least 10 detections in the g band,-- no dubious corrections in that filter, and classification probabilities with ranking 1 for the light curve classifier.-- Step 1: Filter objects with at least 10 detections in the g band and no dubious correctionsWITH filtered_objects AS (    SELECT        d.oid    FROM        detection d    WHERE        d.fid = 1 -- g band        AND d.dubious = FALSE -- no dubious corrections    GROUP BY        d.oid    HAVING        COUNT(*) >= 10 -- at least 10 detections),-- Step 2: Retrieve classification information for objects with ranking 1 and lc_classifierclassified_objects AS (    SELECT        p.oid,        p.class_name,        p.classifier_version,        p.probability    FROM        probability p    WHERE        p.ranking = 1 -- most likely classification        AND p.classifier_name = 'lc_classifier' -- light curve classifier)-- Step 3: Join filtered objects with classification information and limit resultsSELECT    fo.oid AS ztf_identifier,    co.classifier_version,    co.class_name,    co.probabilityFROM    filtered_objects foINNER JOIN    classified_objects coON    fo.oid = co.oidORDER BY    fo.oid ASC -- order by oidLIMIT 500 -- limit to 500 results]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.833454847335815,2025-07-24T01:07:58,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,92,5,"-- Retrieve at most 500 ZTF objects ordered by their oids, with at least 10 detections in the g band,-- no dubious corrections in that filter, and probabilities with ranking 1 for the light curve classifier.SELECT     p.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     probability p-- Join with a subquery to filter objects with at least 10 detections in the g band and no dubious correctionsINNER JOIN (    SELECT         d.oid    FROM         detection d    WHERE         d.fid = 1 -- g band        AND d.dubious = FALSE -- no dubious corrections    GROUP BY         d.oid    HAVING         COUNT(*) >= 10 -- at least 10 detections) AS filtered_objectsON     p.oid = filtered_objects.oidWHERE     p.ranking = 1 -- only include probabilities with ranking 1    AND p.classifier_name = 'lc_classifier' -- light curve classifierORDER BY     p.oid ASC -- order by oidLIMIT 500 -- limit to 500 results","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,22.400028944015503,2025-07-23T19:13:31,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve at most 500 ZTF objects ordered by their oids, with at least 10 detections in the g band,-- no dubious corrections in that filter, and probabilities with ranking 1 for the light curve classifier.SELECT     p.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     probability p-- Join with a subquery to filter objects with at least 10 detections in the g band and no dubious correctionsINNER JOIN (    SELECT         d.oid    FROM         detection d    WHERE         d.fid = 1 -- g band        AND d.dubious = FALSE -- no dubious corrections    GROUP BY         d.oid    HAVING         COUNT(*) >= 10 -- at least 10 detections) AS filtered_objectsON     p.oid = filtered_objects.oidWHERE     p.ranking = 1 -- only include probabilities with ranking 1    AND p.classifier_name = 'lc_classifier' -- light curve classifierORDER BY     p.oid ASC -- order by oidLIMIT 500 -- limit to 500 results]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.9454927444458,2025-07-24T01:08:14,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,92,6,"-- Retrieve at most 500 ZTF objects ordered by their oids, with at least 10 detections in the g band,-- no dubious corrections in that filter, and probabilities with ranking 1 for the light curve classifier.WITH filtered_detections AS (    SELECT        oid    FROM        detection    WHERE        fid = 1 -- g band        AND dubious = FALSE -- no dubious corrections    GROUP BY        oid    HAVING        COUNT(*) >= 10 -- at least 10 detections),filtered_objects AS (    SELECT        o.oid    FROM        object o    INNER JOIN        filtered_detections fd ON o.oid = fd.oid),final_results AS (    SELECT        po.oid,        po.classifier_version,        po.class_name,        po.probability    FROM        probability po    INNER JOIN        filtered_objects fo ON po.oid = fo.oid    WHERE        po.ranking = 1 -- only the most likely classification        AND po.classifier_name = 'lc_classifier' -- light curve classifier)SELECT    oid,    classifier_version,    class_name,    probabilityFROM    final_resultsORDER BY    oid ASCLIMIT 500","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,32.38863587379456,2025-07-23T19:14:03,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve at most 500 ZTF objects ordered by their oids, with at least 10 detections in the g band,-- no dubious corrections in that filter, and probabilities with ranking 1 for the light curve classifier.WITH filtered_detections AS (    -- Step 1: Filter detections in the g band (fid = 1) with no dubious corrections and group by oid    SELECT        oid    FROM        detection    WHERE        fid = 1 -- g band        AND dubious = FALSE -- no dubious corrections    GROUP BY        oid    HAVING        COUNT(*) >= 10 -- at least 10 detections),filtered_objects AS (    -- Step 2: Filter objects that match the filtered detections    SELECT        o.oid    FROM        object o    INNER JOIN        filtered_detections fd ON o.oid = fd.oid),final_results AS (    -- Step 3: Join with the probability table to get the required classification details    SELECT        po.oid,        po.classifier_version,        po.class_name,        po.probability    FROM        probability po    INNER JOIN        filtered_objects fo ON po.oid = fo.oid    WHERE        po.ranking = 1 -- only the most likely classification        AND po.classifier_name = 'lc_classifier' -- light curve classifier)-- Step 4: Select the final results and limit to 500 rowsSELECT    oid,    classifier_version,    class_name,    probabilityFROM    final_resultsORDER BY    oid ASCLIMIT 500]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.953173637390137,2025-07-24T01:08:31,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,92,7,"-- Query to retrieve at most 500 ZTF objects with at least 10 detections in the g band,-- no dubious corrections in that filter, and probabilities with ranking 1 for the light curve classifier.SELECT     o.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     object o-- Join with detection table to filter objects with at least 10 detections in g band and no dubious correctionsINNER JOIN (    SELECT DISTINCT oid    FROM detection    WHERE fid = 1 -- g band      AND dubious = FALSE -- no dubious corrections) d ON o.oid = d.oid-- Join with probability table to filter probabilities with ranking 1 for the light curve classifierINNER JOIN probability p ON o.oid = p.oidWHERE     o.ndet >= 10 -- at least 10 detections    AND p.ranking = 1 -- only the most likely class    AND p.classifier_name = 'lc_classifier' -- light curve classifierORDER BY     o.oid ASC -- order by ZTF identifierLIMIT 500 -- limit to at most 500 results","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,19.0737042427063,2025-07-23T19:14:22,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve at most 500 ZTF objects with at least 10 detections in the g band,-- no dubious corrections in that filter, and probabilities with ranking 1 for the light curve classifier.SELECT     o.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     object o-- Join with detection table to filter objects with at least 10 detections in g band and no dubious correctionsINNER JOIN (    SELECT         oid    FROM         detection    WHERE         fid = 1 -- g band        AND dubious = FALSE -- no dubious corrections    GROUP BY         oid    HAVING         COUNT(*) >= 10 -- at least 10 detections in g band) d ON o.oid = d.oid-- Join with probability table to filter probabilities with ranking 1 for the light curve classifierINNER JOIN probability p ON o.oid = p.oidWHERE     p.ranking = 1 -- only the most likely class    AND p.classifier_name = 'lc_classifier' -- light curve classifierORDER BY     o.oid ASC -- order by ZTF identifierLIMIT 500 -- limit to at most 500 results]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.473501205444336,2025-07-24T01:08:49,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,92,8,"-- Query to retrieve at most 500 ZTF objects with at least 10 detections in the g band,-- no dubious corrections in that filter, and classification probabilities with ranking 1-- for the light curve classifier.SELECT     o.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     object o-- Join with the detection table to filter detections in the g band and exclude dubious onesINNER JOIN (    SELECT DISTINCT oid    FROM detection    WHERE fid = 1 -- g band      AND dubious = FALSE) d ON o.oid = d.oid-- Join with the probability table to get classification informationINNER JOIN probability p ON o.oid = p.oidWHERE     o.ndet >= 10 -- At least 10 detections    AND p.ranking = 1 -- Only the most likely classification    AND p.classifier_name = 'lc_classifier' -- Light curve classifierORDER BY     o.oid ASC -- Order by ZTF identifierLIMIT 500 -- Limit to at most 500 results","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,23.353625059127808,2025-07-23T19:14:46,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve at most 500 ZTF objects with at least 10 detections in the g band,-- no dubious corrections in that filter, and classification probabilities with ranking 1-- for the light curve classifier.SELECT     o.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     object o-- Join with the detection table to filter detections in the g band and exclude dubious onesINNER JOIN (    SELECT         oid     FROM         detection     WHERE         fid = 1 -- g band        AND dubious = FALSE    GROUP BY         oid) d ON o.oid = d.oid-- Join with the probability table to get classification informationINNER JOIN probability p ON o.oid = p.oidWHERE     o.ndet >= 10 -- At least 10 detections    AND p.ranking = 1 -- Only the most likely classification    AND p.classifier_name = 'lc_classifier' -- Light curve classifierORDER BY     o.oid ASC -- Order by ZTF identifierLIMIT 500 -- Limit to at most 500 results]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.817702054977415,2025-07-24T01:09:05,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,92,9,"-- Retrieve at most 500 ZTF objects ordered by their oids, with at least 10 detections in the g band,-- no dubious corrections in that filter, and classification probabilities with ranking 1 for the light curve classifier.WITH filtered_detections AS (    -- Subquery 1: Filter detections in the g band (fid = 1) with no dubious corrections and count detections per object    SELECT        oid    FROM        detection    WHERE        fid = 1 -- g band        AND dubious = FALSE    GROUP BY        oid    HAVING        COUNT(*) >= 10 -- At least 10 detections),filtered_probabilities AS (    -- Subquery 2: Filter probabilities with ranking = 1 and classifier_name = 'lc_classifier'    SELECT        oid,        classifier_version,        class_name,        probability    FROM        probability    WHERE        ranking = 1        AND classifier_name = 'lc_classifier')-- Final query: Join filtered detections, probabilities, and objects, and apply sorting and limitingSELECT    o.oid AS ztf_identifier,    p.classifier_version,    p.class_name,    p.probabilityFROM    object oINNER JOIN    filtered_detections d ON o.oid = d.oidINNER JOIN    filtered_probabilities p ON o.oid = p.oidORDER BY    o.oid ASCLIMIT 500","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,24.88426351547241,2025-07-23T19:15:11,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QueryWITH filtered_detections AS (    -- Subquery 1: Filter detections in the g band (fid = 1) with no dubious corrections and count detections per object    SELECT        oid    FROM        detection    WHERE        fid = 1 -- g band        AND dubious = FALSE -- No dubious corrections    GROUP BY        oid    HAVING        COUNT(*) >= 10 -- At least 10 detections),filtered_probabilities AS (    -- Subquery 2: Filter probabilities with ranking = 1 and classifier_name = 'lc_classifier'    SELECT        oid,        classifier_version,        class_name,        probability    FROM        probability    WHERE        ranking = 1 -- Only the most likely probabilities        AND classifier_name = 'lc_classifier' -- Light curve classifier)-- Final query: Join filtered detections, probabilities, and objects, and apply sorting and limitingSELECT    o.oid AS ztf_identifier,    p.classifier_version,    p.class_name,    p.probabilityFROM    object oINNER JOIN    filtered_detections d ON o.oid = d.oidINNER JOIN    filtered_probabilities p ON o.oid = p.oidORDER BY    o.oid ASC -- Order by object identifier in ascending orderLIMIT 500 -- Limit the result to at most 500 objects]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.72687602043152,2025-07-24T01:09:22,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,92,10,"-- Retrieve at most 500 ZTF objects with at least 10 detections in the g band (fid = 1),-- no dubious corrections, and classification probabilities with ranking = 1 for the light curve classifier.SELECT     o.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     object o-- Join with a subquery that filters detections in the g band (fid = 1) with no dubious corrections-- and counts the number of such detections per object.INNER JOIN (    SELECT         d.oid    FROM         detection d    WHERE         d.fid = 1 -- g band        AND d.dubious = FALSE -- no dubious corrections    GROUP BY         d.oid    HAVING         COUNT(*) >= 10 -- at least 10 detections) d_filtered ON o.oid = d_filtered.oid-- Join with the probability table to get classification informationINNER JOIN probability p ON o.oid = p.oidWHERE     p.ranking = 1 -- only the most likely classification    AND p.classifier_name = 'lc_classifier' -- light curve classifierORDER BY     o.oid ASC -- order by ZTF identifierLIMIT 500 -- limit to at most 500 results","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', '\nCREATE TABLE taxonomy (\n    classifier_name VARCHAR PRIMARY KEY, /* name of the taxonomy */\n    classifier_version VARCHAR PRIMARY KEY, /* taxonomy version */\n    classes VARCHAR[] NOT NULL /* classes in the hierarchical form they are computed */\n);\n']",medium,25.414546251297,2025-07-23T19:15:36,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve at most 500 ZTF objects with at least 10 detections in the g band (fid = 1),-- no dubious corrections, and classification probabilities with ranking = 1 for the light curve classifier.SELECT     o.oid AS ztf_identifier,     p.classifier_version,     p.class_name,     p.probabilityFROM     object o-- Join with a subquery that filters detections in the g band (fid = 1) with no dubious corrections-- and counts the number of such detections per object.INNER JOIN (    SELECT         d.oid    FROM         detection d    WHERE         d.fid = 1 -- g band        AND d.dubious = FALSE -- no dubious corrections    GROUP BY         d.oid    HAVING         COUNT(*) >= 10 -- at least 10 detections) d_filtered ON o.oid = d_filtered.oid-- Join with the probability table to get classification informationINNER JOIN probability p ON o.oid = p.oidWHERE     p.ranking = 1 -- only the most likely classification    AND p.classifier_name = 'lc_classifier' -- light curve classifierORDER BY     o.oid ASC -- order by ZTF identifierLIMIT 500 -- limit to at most 500 results]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.87377405166626,2025-07-24T01:09:40,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,,,83,0,"SELECT
    *
FROM
    allwise
WHERE
    oid_catalog in
(
SELECT
    oid_catalog
FROM
    xmatch
WHERE
    oid = 'ZTF21aazqwxv'
)",,,,,"[           oid_catalog          ra       dec  w1mpro  w2mpro  w3mpro  w4mpro  \
0  J131116.64+045854.7  197.819368  4.981863  13.319  13.129   9.839   7.761   

   w1sigmpro  w2sigmpro  w3sigmpro  w4sigmpro  j_m_2mass  h_m_2mass  \
0      0.033      0.037      0.056      0.247     15.331     14.491   

   k_m_2mass  j_msig_2mass  h_msig_2mass  k_msig_2mass  
0     14.027         0.109           0.1           0.1  ]",,4.47248101234436,2025-07-24T01:09:45,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,83,1,-- Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE oid_catalog = (    SELECT oid    FROM object    WHERE oid = 'ZTF21aazqwxv'),"['\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.0954394340515137,2025-07-23T19:41:16,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE oid_catalog = (    SELECT oid_catalog    FROM object    WHERE oid = 'ZTF21aazqwxv')]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.973721265792848,2025-07-24T01:10:00,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,83,2,"-- Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_join(allwise.ra, allwise.dec,                (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),                (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),                0.000277778) -- 0.000277778 degrees corresponds to 1 arcsecond","['\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.344205379486084,2025-07-23T19:41:20,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_radial_query(    allwise.ra,     allwise.dec,     (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),     (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),     0.000277778)]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.979093551635742,2025-07-24T01:10:18,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,83,3,"-- Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_join(allwise.ra, allwise.dec,                (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),                (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),                0.000277778) -- 1 arcsecond radius in degrees","['\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,4.332351922988892,2025-07-23T19:41:24,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_join(    allwise.ra,     allwise.dec,     (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),     (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),     0.000277778 -- 1 arcsecond radius in degrees)]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.589558839797974,2025-07-24T01:10:33,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,83,4,"-- Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_join(allwise.ra, allwise.dec,                (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),                (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),                0.000277778) -- 1 arcsecond radius in degrees","['\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.4931681156158447,2025-07-23T19:41:28,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_join(    allwise.ra,     allwise.dec,     (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),     (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),     0.000277778 -- 1 arcsecond radius in degrees)]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.231717109680176,2025-07-24T01:10:49,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,83,5,-- Retrieve all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT allwise.*FROM objectINNER JOIN allwise ON object.oid = allwise.oid_catalogWHERE object.oid = 'ZTF21aazqwxv',"['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,29.47672867774964,2025-07-23T19:41:57,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected query to retrieve all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT allwise.*FROM objectINNER JOIN allwise ON object.oid = allwise.oid_catalogWHERE object.oid = 'ZTF21aazqwxv']
(Background on this error at: https://sqlalche.me/e/20/f405)",10.405133247375488,2025-07-24T01:11:04,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,83,6,-- Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE oid_catalog IN (    SELECT oid    FROM object    WHERE oid = 'ZTF21aazqwxv'),"['\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,2.88637375831604,2025-07-23T19:42:00,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE oid_catalog = (    SELECT oid    FROM object    WHERE oid = 'ZTF21aazqwxv')]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.865448474884031,2025-07-24T01:11:18,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,83,7,"-- Query to get all columns in the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_join(allwise.ra, allwise.dec,                (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),                (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),                0.000277778) -- 0.000277778 degrees = 1 arcsecond","['\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.013084888458252,2025-07-23T19:42:03,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to get all columns in the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_radial_query(    allwise.ra,     allwise.dec,     (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),     (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),     0.000277778 -- 0.000277778 degrees = 1 arcsecond)]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.180956840515137,2025-07-24T01:11:33,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,83,8,"-- Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_join(allwise.ra, allwise.dec,                (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),                (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),                0.000277778) -- 0.000277778 degrees = 1 arcsecond","['\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.083969116210937,2025-07-23T19:42:06,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE q3c_radial_query(    allwise.ra,     allwise.dec,     (SELECT meanra FROM object WHERE oid = 'ZTF21aazqwxv'),     (SELECT meandec FROM object WHERE oid = 'ZTF21aazqwxv'),     0.000277778 -- 0.000277778 degrees = 1 arcsecond)]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.82469081878662,2025-07-24T01:11:49,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,83,9,-- Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE oid_catalog = (    SELECT oid    FROM object    WHERE oid = 'ZTF21aazqwxv'),"['\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,2.5708096027374268,2025-07-23T19:42:09,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE oid_catalog = (    SELECT oid_catalog    FROM object    WHERE oid = 'ZTF21aazqwxv')]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.78031611442566,2025-07-24T01:12:04,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,83,10,-- Query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE oid_catalog IN (    SELECT oid    FROM object    WHERE oid = 'ZTF21aazqwxv'),"['\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n', '\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n']",simple,3.003185272216797,2025-07-23T19:42:12,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected query to get all columns from the 'allwise' table for the ZTF object 'ZTF21aazqwxv'SELECT *FROM allwiseWHERE oid_catalog = (    SELECT oid    FROM object    WHERE oid = 'ZTF21aazqwxv')]
(Background on this error at: https://sqlalche.me/e/20/f405)",8.446338415145874,2025-07-24T01:12:16,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,,,84,0,"SELECT
    oid, xmatch.oid_catalog, dist,
    w1mpro, w2mpro, w3mpro, w4mpro
FROM
    xmatch INNER JOIN
    allwise
    ON xmatch.oid_catalog = allwise.oid_catalog
WHERE
    xmatch.oid = 'ZTF19aascdol'",,,,,"[            oid          oid_catalog      dist  w1mpro  w2mpro  w3mpro  w4mpro
0  ZTF19aascdol  J154334.93+152539.5  0.000043  15.286  14.354  11.747   8.611]",,3.6595754623413086,2025-07-24T01:12:20,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,84,1,"-- Retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)SELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_object_id, -- ALLWISE object identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Distance between counterparts    a.w1mpro AS w1_magnitude, -- WISE W1 magnitude    a.w2mpro AS w2_magnitude, -- WISE W2 magnitude    a.w3mpro AS w3_magnitude, -- WISE W3 magnitude    a.w4mpro AS w4_magnitude -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_radial_query(o.meanra, o.meandec, a.ra, a.dec, 0.00138889) -- Match within 5 arcsecondsWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by distance to prioritize closest matches","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,28.604894876480103,2025-07-23T19:42:41,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_object_id, -- ALLWISE object identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Distance between counterparts    a.w1mpro AS w1_magnitude, -- WISE W1 magnitude    a.w2mpro AS w2_magnitude, -- WISE W2 magnitude    a.w3mpro AS w3_magnitude, -- WISE W3 magnitude    a.w4mpro AS w4_magnitude -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_radial_query(o.meanra, o.meandec, a.ra, a.dec, 0.00138889) -- Match within 5 arcsecondsWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by distance to prioritize closest matches]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.76490831375122,2025-07-24T01:12:36,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,84,2,"-- Retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)SELECT     object.oid AS ztf_identifier, -- ZTF object identifier    allwise.oid_catalog AS allwise_identifier, -- ALLWISE catalog identifier    q3c_dist(object.meanra, object.meandec, allwise.ra, allwise.dec) AS distance, -- Angular distance between counterparts    allwise.w1mpro, -- WISE W1 magnitude    allwise.w2mpro, -- WISE W2 magnitude    allwise.w3mpro, -- WISE W3 magnitude    allwise.w4mpro  -- WISE W4 magnitudeFROM     objectINNER JOIN     allwiseON     q3c_join(object.meanra, object.meandec, allwise.ra, allwise.dec, 0.00138889) -- Match within 5 arcseconds (0.00138889 degrees)WHERE     object.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     distance ASC -- Sort by angular distance to prioritize the closest match","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,19.75937795639038,2025-07-23T19:43:01,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     object.oid AS ztf_identifier, -- ZTF object identifier    allwise.oid_catalog AS allwise_identifier, -- ALLWISE catalog identifier    q3c_dist(object.meanra, object.meandec, allwise.ra, allwise.dec) AS distance, -- Angular distance between counterparts    allwise.w1mpro, -- WISE W1 magnitude    allwise.w2mpro, -- WISE W2 magnitude    allwise.w3mpro, -- WISE W3 magnitude    allwise.w4mpro  -- WISE W4 magnitudeFROM     objectINNER JOIN     allwiseON     q3c_join(object.meanra, object.meandec, allwise.ra, allwise.dec, 0.00138889) -- Match within 5 arcseconds (0.00138889 degrees)WHERE     object.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     distance ASC -- Sort by angular distance to prioritize the closest match]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.154611587524414,2025-07-24T01:12:51,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,84,3,"-- Retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)SELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_object_id, -- ALLWISE object identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro AS w1_magnitude, -- WISE W1 magnitude    a.w2mpro AS w2_magnitude, -- WISE W2 magnitude    a.w3mpro AS w3_magnitude, -- WISE W3 magnitude    a.w4mpro AS w4_magnitude -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_radial_query(o.meanra, o.meandec, a.ra, a.dec, 0.00139) -- Match within 5 arcseconds (0.00139 degrees)WHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance in ascending order","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,27.88888931274414,2025-07-23T19:43:29,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_object_id, -- ALLWISE object identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro AS w1_magnitude, -- WISE W1 magnitude    a.w2mpro AS w2_magnitude, -- WISE W2 magnitude    a.w3mpro AS w3_magnitude, -- WISE W3 magnitude    a.w4mpro AS w4_magnitude -- WISE W4 magnitudeFROM     object o -- Correctly referencing the 'object' tableINNER JOIN     allwise a -- Correctly referencing the 'allwise' tableON     q3c_radial_query(o.meanra, o.meandec, a.ra, a.dec, 0.00139) -- Match within 5 arcseconds (0.00139 degrees)WHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance in ascending order]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.880475044250488,2025-07-24T01:13:08,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,84,4,"-- Query to retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)SELECT     o.oid AS ztf_identifier, -- ZTF object identifier    a.oid_catalog AS allwise_identifier, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro AS w1_magnitude, -- WISE W1 magnitude    a.w2mpro AS w2_magnitude, -- WISE W2 magnitude    a.w3mpro AS w3_magnitude, -- WISE W3 magnitude    a.w4mpro AS w4_magnitude -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_radial_query(o.meanra, o.meandec, a.ra, a.dec, 0.00027778) -- Spatial match within 1 arcsecondWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,22.05002927780152,2025-07-23T19:43:51,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)SELECT     o.oid AS ztf_identifier, -- ZTF object identifier    a.oid_catalog AS allwise_identifier, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro AS w1_magnitude, -- WISE W1 magnitude    a.w2mpro AS w2_magnitude, -- WISE W2 magnitude    a.w3mpro AS w3_magnitude, -- WISE W3 magnitude    a.w4mpro AS w4_magnitude -- WISE W4 magnitudeFROM     object o -- Main table for ZTF objectsINNER JOIN     allwise a -- Table for ALLWISE catalogON     q3c_radial_query(o.meanra, o.meandec, a.ra, a.dec, 0.00027778) -- Spatial match within 1 arcsecondWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.354011297225952,2025-07-24T01:13:24,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,84,5,"-- Query to retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)SELECT     o.oid AS ztf_identifier, -- ZTF object identifier    a.oid_catalog AS allwise_identifier, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Distance between counterparts    a.w1mpro AS w1_magnitude, -- WISE W1 magnitude    a.w2mpro AS w2_magnitude, -- WISE W2 magnitude    a.w3mpro AS w3_magnitude, -- WISE W3 magnitude    a.w4mpro AS w4_magnitude -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 1.0 / 3600.0) -- Spatial join with a 1 arcsecond radiusWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,23.00326776504517,2025-07-23T19:44:14,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)SELECT     o.oid AS ztf_identifier, -- ZTF object identifier    a.oid_catalog AS allwise_identifier, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Distance between counterparts    a.w1mpro AS w1_magnitude, -- WISE W1 magnitude    a.w2mpro AS w2_magnitude, -- WISE W2 magnitude    a.w3mpro AS w3_magnitude, -- WISE W3 magnitude    a.w4mpro AS w4_magnitude -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 1.0 / 3600.0) -- Spatial join with a 1 arcsecond radiusWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.039889097213743,2025-07-24T01:13:39,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,84,6,"-- Query to retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)-- Includes ZTF identifier, ALLWISE catalog identifier, angular distance, and WISE magnitudes (W1 to W4)SELECT     object.oid AS ztf_oid, -- ZTF object identifier    allwise.oid_catalog AS allwise_oid, -- ALLWISE catalog identifier    q3c_dist(object.meanra, object.meandec, allwise.ra, allwise.dec) AS angular_distance, -- Angular distance between counterparts    allwise.w1mpro, -- WISE W1 magnitude    allwise.w2mpro, -- WISE W2 magnitude    allwise.w3mpro, -- WISE W3 magnitude    allwise.w4mpro  -- WISE W4 magnitudeFROM     objectINNER JOIN     allwiseON     q3c_join(object.meanra, object.meandec, allwise.ra, allwise.dec, 5.0 / 3600.0) -- Match within 5 arcsecondsWHERE     object.oid = 'ZTF19aascdol' -- Filter for the specific ZTF object","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,27.719233989715576,2025-07-23T19:44:42,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)-- Includes ZTF identifier, ALLWISE catalog identifier, angular distance, and WISE magnitudes (W1 to W4)SELECT     object.oid AS ztf_oid, -- ZTF object identifier    allwise.oid_catalog AS allwise_oid, -- ALLWISE catalog identifier    q3c_dist(object.meanra, object.meandec, allwise.ra, allwise.dec) AS angular_distance, -- Angular distance between counterparts    allwise.w1mpro, -- WISE W1 magnitude    allwise.w2mpro, -- WISE W2 magnitude    allwise.w3mpro, -- WISE W3 magnitude    allwise.w4mpro  -- WISE W4 magnitudeFROM     objectINNER JOIN     allwiseON     q3c_join(object.meanra, object.meandec, allwise.ra, allwise.dec, 5.0 / 3600.0) -- Match within 5 arcsecondsWHERE     object.oid = 'ZTF19aascdol' -- Filter for the specific ZTF object]
(Background on this error at: https://sqlalche.me/e/20/f405)",15.829956531524658,2025-07-24T07:52:19,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,84,7,"-- Retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)SELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_catalog_id, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro, -- WISE W1 magnitude    a.w2mpro, -- WISE W2 magnitude    a.w3mpro, -- WISE W3 magnitude    a.w4mpro  -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 0.00027778) -- Match within 1 arcsecond (0.00027778 degrees)WHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,20.34419798851013,2025-07-23T19:45:02,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_catalog_id, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro, -- WISE W1 magnitude    a.w2mpro, -- WISE W2 magnitude    a.w3mpro, -- WISE W3 magnitude    a.w4mpro  -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 0.00027778) -- Match within 1 arcsecond (0.00027778 degrees)WHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.07331132888794,2025-07-24T07:52:34,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,84,8,"-- Retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)-- including identifiers, angular distance, and WISE magnitudes (W1 to W4)SELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_catalog_id, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro, -- WISE W1 magnitude    a.w2mpro, -- WISE W2 magnitude    a.w3mpro, -- WISE W3 magnitude    a.w4mpro  -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 0.00138889) -- Match within 5 arcseconds (0.00138889 degrees)WHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,21.121541261672974,2025-07-23T19:45:23,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_catalog_id, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro, -- WISE W1 magnitude    a.w2mpro, -- WISE W2 magnitude    a.w3mpro, -- WISE W3 magnitude    a.w4mpro  -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 0.00138889) -- Match within 5 arcseconds (0.00138889 degrees)WHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.264700412750244,2025-07-24T07:52:47,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,84,9,"-- Retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)-- including identifiers, angular distance, and WISE magnitudes (W1 to W4)SELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_catalog_id, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro, -- WISE W1 magnitude    a.w2mpro, -- WISE W2 magnitude    a.w3mpro, -- WISE W3 magnitude    a.w4mpro  -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 5.0 / 3600.0) -- Match within 5 arcsecondsWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,23.788135766983032,2025-07-23T19:45:47,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)-- including identifiers, angular distance, and WISE magnitudes (W1 to W4)SELECT     o.oid AS ztf_object_id, -- ZTF object identifier    a.oid_catalog AS allwise_catalog_id, -- ALLWISE catalog identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS angular_distance, -- Angular distance between counterparts    a.w1mpro, -- WISE W1 magnitude    a.w2mpro, -- WISE W2 magnitude    a.w3mpro, -- WISE W3 magnitude    a.w4mpro  -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 5.0 / 3600.0) -- Match within 5 arcsecondsWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     angular_distance ASC -- Sort by angular distance to prioritize the closest match]
(Background on this error at: https://sqlalche.me/e/20/f405)",11.156612396240234,2025-07-24T07:53:02,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,84,10,"-- Retrieve information about the ZTF object 'ZTF19aascdol' and its ALLWISE match(es)SELECT     o.oid AS ztf_oid, -- ZTF object identifier    a.oid_catalog AS allwise_oid, -- ALLWISE object identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS distance_arcsec, -- Angular distance in arcseconds    a.w1mpro, -- WISE W1 magnitude    a.w2mpro, -- WISE W2 magnitude    a.w3mpro, -- WISE W3 magnitude    a.w4mpro  -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 5.0 / 3600.0) -- Match within 5 arcsecondsWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     distance_arcsec ASC -- Sort by distance in ascending order","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE allwise (\n    oid_catalog VARCHAR PRIMARY KEY, /* object Id inside catalog, correspond to column: designation  in ALLWISE : Sexagesimal, equatorial position-based source name in the form: hhmmss.ss+ddmmss.s. The full naming convention for AllWISE Source Catalog sources has the form ""WISEA  Jhhmmss.ss+ddmmss.s,"" where ""WISEA"" indicates the source is from the AllWISE Source Catalog, and ""J"" indicates the position is J2000. The ""WISEA"" acronym is not listed explicitly in the designation column. */\n    ra DOUBLE PRECISION NOT NULL, /* J2000 right ascension with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    dec DOUBLE PRECISION NOT NULL, /* J2000 declination with respect to the 2MASS PSC reference frame from the non-moving source extraction. */\n    w1mpro DOUBLE PRECISION, /* W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR<2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made. */\n    w2mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w3mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w4mpro DOUBLE PRECISION, /* analogous to w1mpro */\n    w1sigmpro DOUBLE PRECISION, /* W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable. */\n    w2sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w3sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    w4sigmpro DOUBLE PRECISION, /* analogous to w1sigmpro */\n    j_m_2mass DOUBLE PRECISION, /* 2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band magnitude entry is ""null"". */\n    h_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    k_m_2mass DOUBLE PRECISION, /* analogous to j_m_2mass */\n    j_msig_2mass DOUBLE PRECISION, /* 2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source. This column is ""null"" if there is no associated 2MASS PSC source or if the 2MASS PSC J-band uncertainty entry is ""null"". */\n    h_msig_2mass DOUBLE PRECISION, /* analogous to j_msig_2mass */\n    k_msig_2mass DOUBLE PRECISION /* analogous to j_msig_2mass */\n);\n\nCREATE INDEX ix_allwise_dec ON allwise USING btree (dec);\nCREATE INDEX ix_allwise_ra ON allwise USING btree (ra);\n']",medium,23.76579523086548,2025-07-23T19:46:11,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT     o.oid AS ztf_oid, -- ZTF object identifier    a.oid_catalog AS allwise_oid, -- ALLWISE object identifier    q3c_dist(o.meanra, o.meandec, a.ra, a.dec) AS distance_arcsec, -- Angular distance in arcseconds    a.w1mpro, -- WISE W1 magnitude    a.w2mpro, -- WISE W2 magnitude    a.w3mpro, -- WISE W3 magnitude    a.w4mpro  -- WISE W4 magnitudeFROM     object oINNER JOIN     allwise aON     q3c_join(o.meanra, o.meandec, a.ra, a.dec, 5.0 / 3600.0) -- Match within 5 arcsecondsWHERE     o.oid = 'ZTF19aascdol' -- Filter for the specific ZTF objectORDER BY     distance_arcsec ASC -- Sort by distance in ascending order]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.151501893997192,2025-07-24T07:53:19,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,,,96,0,"SELECT
    ss_ztf.*, detection.mjd, detection.fid,
    detection.isdiffpos, detection.ra, detection.dec,
    detection.magpsf, detection.sigmapsf
FROM
    ss_ztf INNER JOIN
    detection
    ON ss_ztf.oid = detection.oid
    AND ss_ztf.candid = detection.candid
WHERE
    ssnamenr IN ('2003FP134','2009UK56')
    AND ssdistnr < 2
ORDER BY ssnamenr, mjd",,,,,"[             oid               candid  ssdistnr  ssmagnr   ssnamenr  \
0   ZTF21abbsmyp  1595376262715015044       0.0     19.5  2003FP134   
1   ZTF21abcqekm  1608313551615015025       0.0     19.0  2003FP134   
2   ZTF21abculin  1609376562915015021       0.0     19.0  2003FP134   
3   ZTF21abdihfx  1612381041715015014       0.0     18.9  2003FP134   
4   ZTF21abdulcm  1614399211715015002       0.0     18.8  2003FP134   
5   ZTF21abeywpa  1619365033915015076       0.0     19.1  2003FP134   
6   ZTF21abfkygj  1621376883815015021       0.0     19.2  2003FP134   
7   ZTF21abgavxk  1624308764315015004       0.0     19.3  2003FP134   
8   ZTF21abgxhjg  1628315454015015046       0.0     19.5  2003FP134   
9   ZTF21abhfyvv  1630314794115015013       0.0     19.5  2003FP134   
10  ZTF21abiljll  1640314606315015016       0.0     19.8  2003FP134   
11  ZTF21abjphvf  1646209986215015001       0.0     20.0  2003FP134   
12  ZTF20acawpht  1356469912115015034       0.0     20.7   2009UK56   
13  ZTF20acdqnho  1362353242215015020       0.0     20.5   2009UK56   
14  ZTF20acilssf  1380426825615015010       0.0     20.1   2009UK56   
15  ZTF20acjbakd  1382319845615015022       0.0     20.1   2009UK56   
16  ZTF20acjdjlc  1382380335615015023       0.0     20.1   2009UK56   
17  ZTF20acjxpmq  1384347685815015007       0.0     20.0   2009UK56   
18  ZTF20ackrekd  1386400255815015038       0.0     20.0   2009UK56   
19  ZTF20acmpwqx  1390391754415015016       0.0     19.9   2009UK56   
20  ZTF20acmriqf  1390410544415015011       0.0     19.9   2009UK56   
21  ZTF20acoyuab  1403235991815015005       0.0     19.7   2009UK56   
22  ZTF20acpljmx  1410308410715015003       0.0     19.8   2009UK56   
23  ZTF20acpmmxt  1410344090715015002       0.0     19.8   2009UK56   
24  ZTF20acqazko  1412291460615015021       0.0     19.8   2009UK56   
25  ZTF20acrfjpp  1416266955415015001       0.0     19.9   2009UK56   
26  ZTF20acruhoq  1418239475415015010       0.0     20.0   2009UK56   

             mjd  fid  isdiffpos          ra        dec     magpsf  sigmapsf  
0   59349.376262    1          1  256.824875 -25.974222  20.192154  0.178280  
1   59362.313553    2          1  254.248201 -24.971674  18.976067  0.170550  
2   59363.376562    2          1  254.000931 -24.876152  19.098774  0.178708  
3   59366.381042    2          1  253.289819 -24.597101  19.052930  0.091880  
4   59368.399213    2          1  252.804054 -24.403010  18.866552  0.111349  
5   59373.365035    2          1  251.609834 -23.908624  19.000805  0.124175  
6   59375.376887    2          1  251.135458 -23.703780  18.983727  0.160271  
7   59378.308762    2          1  250.466414 -23.403652  19.122366  0.093317  
8   59382.315451    2          1  249.608787 -22.995193  19.243404  0.105018  
9   59384.314792    2          1  249.212822 -22.794441  19.301159  0.215448  
10  59394.314606    2          1  247.645013 -21.856142  19.525230  0.168116  
11  59400.209988    2          1  247.099310 -21.379044  19.692917  0.152464  
12  59110.469919    2          1   39.441994  25.290333  20.403624  0.171651  
13  59116.353241    2          1   39.192099  24.766625  20.593506  0.179858  
14  59134.426829    2          1   37.167419  22.314968  20.169308  0.190793  
15  59136.319849    2          1   36.861685  21.984306  20.084251  0.143195  
16  59136.380336    1          1   36.851189  21.973495  20.582052  0.217129  
17  59138.347685    2          1   36.517718  21.615395  20.017073  0.141530  
18  59140.400255    1          1   36.154655  21.227094  20.329580  0.195694  
19  59144.391759    1          1   35.415444  20.432652  20.295746  0.186697  
20  59144.410544    2          1   35.411754  20.428770  19.843100  0.108691  
21  59157.235995    2          1   32.902432  17.607816  19.573830  0.144548  
22  59164.308414    2          1   31.572239  15.965531  19.879513  0.182747  
23  59164.344097    1          1   31.565624  15.957268  20.331053  0.161874  
24  59166.291470    2          1   31.223077  15.505689  20.051088  0.208385  
25  59170.266956    2          1   30.566547  14.594135  19.858680  0.133551  
26  59172.239479    1          1   30.265756  14.149791  20.297800  0.209505  ]",,28.523520469665527,2025-07-24T07:53:47,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,96,1,"-- Final Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Define the Solar System objects and their coordinates    SELECT '2003FP134' AS ssnamenr, 123.456 AS ra, -12.345 AS dec    UNION ALL    SELECT '2009UK56', 234.567, -23.456)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd, -- Detection date    detection.fid, -- Filter identifier    detection.isdiffpos, -- Is difference positive flag    detection.ra, -- Right Ascension    detection.dec, -- Declination    detection.magpsf, -- Difference magnitude    detection.sigmapsf -- Uncertainty in difference magnitudeFROM     ss_ztfINNER JOIN     detection ON ss_ztf.candid = detection.candid -- Join ss_ztf and detection tables on candidINNER JOIN     catalog ON ss_ztf.ssnamenr = catalog.ssnamenr -- Match Solar System object namesWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter for specific Solar System objects    AND ss_ztf.ssdistnr <= 2 / 3600.0 -- Ensure distance is within 2 arcseconds    AND q3c_radial_query(detection.ra, detection.dec, catalog.ra, catalog.dec, 2 / 3600.0) -- Spatial filtering using Q3CORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Then sort by detection date","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,30.67071843147278,2025-07-23T19:46:42,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Define the Solar System objects and their coordinates    SELECT '2003FP134' AS ssnamenr, 123.456 AS ra, -12.345 AS dec    UNION ALL    SELECT '2009UK56', 234.567, -23.456)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd, -- Detection date    detection.fid, -- Filter identifier    detection.isdiffpos, -- Is difference positive flag    detection.ra, -- Right Ascension    detection.dec, -- Declination    detection.magpsf, -- Difference magnitude    detection.sigmapsf -- Uncertainty in difference magnitudeFROM     ss_ztfINNER JOIN     detection ON ss_ztf.candid = detection.candid -- Join ss_ztf and detection tables on candidINNER JOIN     catalog ON ss_ztf.ssnamenr = catalog.ssnamenr -- Match Solar System object namesWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter for specific Solar System objects    AND ss_ztf.ssdistnr <= 2 / 3600.0 -- Ensure distance is within 2 arcseconds    AND q3c_radial_query(ss_ztf.ra, ss_ztf.dec, catalog.ra, catalog.dec, 2 / 3600.0) -- Spatial filtering using Q3CORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Then sort by detection date]
(Background on this error at: https://sqlalche.me/e/20/f405)",14.723815679550173,2025-07-24T07:54:10,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,96,2,"-- Final Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog (ssnamenr, ra, dec) AS (    VALUES         ('2003FP134', <ra_value1>, <dec_value1>), -- Replace <ra_value1> and <dec_value1> with actual RA/Dec values        ('2009UK56', <ra_value2>, <dec_value2>)  -- Replace <ra_value2> and <dec_value2> with actual RA/Dec values),filtered_detections AS (    SELECT         d.*    FROM         detection d    INNER JOIN catalog c        ON q3c_radial_query(d.ra, d.dec, c.ra, c.dec, 0.0005556) -- 2 arcseconds in degrees),filtered_ss_ztf AS (    SELECT         s.*    FROM         ss_ztf s    WHERE         s.ssnamenr IN ('2003FP134', '2009UK56'))SELECT     s.*,     d.mjd,     d.fid,     d.isdiffpos,     d.ra,     d.dec,     d.magpsf,     d.sigmapsfFROM     filtered_ss_ztf sINNER JOIN     filtered_detections d    ON s.oid = d.oidORDER BY     s.ssnamenr ASC,     d.mjd ASC","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,24.83741450309753,2025-07-23T19:47:07,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog (ssnamenr, ra, dec) AS (    VALUES         ('2003FP134', <ra_value1>, <dec_value1>), -- Replace <ra_value1> and <dec_value1> with actual RA/Dec values        ('2009UK56', <ra_value2>, <dec_value2>)  -- Replace <ra_value2> and <dec_value2> with actual RA/Dec values),filtered_detections AS (    SELECT         d.*    FROM         detection d    INNER JOIN         catalog c    ON         q3c_radial_query(d.ra, d.dec, c.ra, c.dec, 0.0005556) -- 2 arcseconds in degrees),filtered_ss_ztf AS (    SELECT         s.*    FROM         ss_ztf s    WHERE         s.ssnamenr IN ('2003FP134', '2009UK56'))SELECT     s.*,     d.mjd,     d.fid,     d.isdiffpos,     d.ra,     d.dec,     d.magpsf,     d.sigmapsfFROM     filtered_ss_ztf sINNER JOIN     filtered_detections dON     s.candid = d.candid -- Corrected join condition to use 'candid' as the linking columnORDER BY     s.ssnamenr ASC,     d.mjd ASC]
(Background on this error at: https://sqlalche.me/e/20/f405)",14.19603180885315,2025-07-24T07:54:31,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,96,3,"-- Final Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Define the Solar System identifiers and their coordinates    VALUES        ('2003FP134', ra1, dec1),        ('2009UK56', ra2, dec2)    AS catalog(ssnamenr, ra, dec)),filtered_ss_ztf AS (    -- Filter objects in ss_ztf table within 2 arcseconds of the Solar System identifiers    SELECT *    FROM ss_ztf    WHERE EXISTS (        SELECT 1        FROM catalog        WHERE q3c_radial_query(ss_ztf.ra, ss_ztf.dec, catalog.ra, catalog.dec, 0.0005556)          AND ss_ztf.ssnamenr = catalog.ssnamenr    )),detection_data AS (    -- Join the filtered ss_ztf results with the detection table    SELECT        ss_ztf.*,        detection.mjd,        detection.fid,        detection.isdiffpos,        detection.ra,        detection.dec,        detection.magpsf,        detection.sigmapsf    FROM filtered_ss_ztf    INNER JOIN detection ON filtered_ss_ztf.oid = detection.oid)-- Final result combining and sorting the dataSELECT *FROM detection_dataORDER BY ssnamenr, mjd","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,24.54387331008911,2025-07-23T19:47:31,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Define the Solar System identifiers    SELECT         '2003FP134' AS ssnamenr, NULL AS ra, NULL AS dec    UNION ALL    SELECT         '2009UK56' AS ssnamenr, NULL AS ra, NULL AS dec),filtered_ss_ztf AS (    -- Filter objects in ss_ztf table for the specified Solar System identifiers    SELECT *    FROM ss_ztf    WHERE ssnamenr IN ('2003FP134', '2009UK56')),detection_data AS (    -- Join the filtered ss_ztf results with the detection table    SELECT         ss_ztf.*,        detection.mjd,        detection.fid,        detection.isdiffpos,        detection.ra,        detection.dec,        detection.magpsf,        detection.sigmapsf    FROM filtered_ss_ztf    INNER JOIN detection ON filtered_ss_ztf.candid = detection.candid)-- Final result combining and sorting the dataSELECT *FROM detection_dataORDER BY ssnamenr, mjd]
(Background on this error at: https://sqlalche.me/e/20/f405)",14.126220703125,2025-07-24T07:54:52,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,96,4,"-- Final Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH solar_system_objects AS (    -- Define the RA/Dec coordinates for the Solar System identifiers    SELECT DISTINCT ssnamenr, oid, candid, ssdistnr, ssmagnr    FROM ss_ztf    WHERE ssnamenr IN ('2003FP134', '2009UK56')),filtered_objects AS (    -- Perform spatial filtering using q3c_radial_query to find objects within 2 arcseconds    SELECT sso.*, d.*    FROM solar_system_objects sso    INNER JOIN detection d ON sso.candid = d.candid    WHERE q3c_radial_query(d.ra, d.dec, sso.ssdistnr, 0.0005556) -- 2 arcseconds in degrees)-- Select required columns and sort the resultsSELECT     sso.*,     d.mjd AS detection_date,     d.fid AS filter_identifier,     d.isdiffpos,     d.ra,     d.dec,     d.magpsf AS difference_magnitude,     d.sigmapsf AS magnitude_uncertaintyFROM filtered_objects ssoORDER BY sso.ssnamenr, d.mjd","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,25.2495596408844,2025-07-23T19:47:57,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH solar_system_objects AS (    -- Step 1: Select relevant Solar System objects based on their names    SELECT DISTINCT ssnamenr, oid, candid, ssdistnr, ssmagnr    FROM ss_ztf    WHERE ssnamenr IN ('2003FP134', '2009UK56')),filtered_objects AS (    -- Step 2: Perform spatial filtering using q3c_radial_query to find objects within 2 arcseconds    SELECT         sso.ssnamenr,         sso.oid,         sso.candid,         sso.ssdistnr,         sso.ssmagnr,         d.mjd AS detection_date,         d.fid AS filter_identifier,         d.isdiffpos,         d.ra,         d.dec,         d.magpsf AS difference_magnitude,         d.sigmapsf AS magnitude_uncertainty    FROM solar_system_objects sso    INNER JOIN detection d ON sso.candid = d.candid    WHERE q3c_radial_query(d.ra, d.dec, sso.ssdistnr, 0.0005556) -- 2 arcseconds in degrees)-- Step 3: Select required columns and sort the resultsSELECT *FROM filtered_objectsORDER BY ssnamenr, detection_date]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.357985496520996,2025-07-24T07:55:12,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,96,5,"-- Final Query to retrieve detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Temporary table containing Solar System objects of interest with their RA/Dec coordinates    VALUES        ('2003FP134', 123.456, -45.678), -- Replace with actual RA/Dec for '2003FP134'        ('2009UK56', 234.567, -12.345)  -- Replace with actual RA/Dec for '2009UK56') AS c(ssnamenr, ra, dec)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd, -- Detection date    detection.fid, -- Filter identifier    detection.isdiffpos, -- Is difference positive flag    detection.ra, -- Right Ascension    detection.dec, -- Declination    detection.magpsf, -- Difference magnitude    detection.sigmapsf -- Magnitude uncertaintyFROM ss_ztfINNER JOIN detection    ON ss_ztf.candid = detection.candid -- Join ss_ztf and detection on candidINNER JOIN catalog    ON q3c_radial_query(c.ra, c.dec, ss_ztf.ra, ss_ztf.dec, 0.0005556) -- Spatial filtering within 2 arcsecondsWHERE ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter for specific Solar System objectsORDER BY ss_ztf.ssnamenr, detection.mjd -- Sort by MPC name and detection date","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,22.896572828292847,2025-07-23T19:48:20,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Final Query to retrieve detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Temporary table containing Solar System objects of interest with their RA/Dec coordinates    SELECT         '2003FP134' AS ssnamenr, 123.456 AS ra, -45.678 AS dec    UNION ALL    SELECT         '2009UK56' AS ssnamenr, 234.567 AS ra, -12.345 AS dec)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd, -- Detection date    detection.fid, -- Filter identifier    detection.isdiffpos, -- Is difference positive flag    detection.ra, -- Right Ascension    detection.dec, -- Declination    detection.magpsf, -- Difference magnitude    detection.sigmapsf -- Magnitude uncertaintyFROM     ss_ztfINNER JOIN     detection    ON ss_ztf.candid = detection.candid -- Join ss_ztf and detection on candidINNER JOIN     catalog    ON q3c_radial_query(catalog.ra, catalog.dec, detection.ra, detection.dec, 0.0005556) -- Spatial filtering within 2 arcsecondsWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter for specific Solar System objectsORDER BY     ss_ztf.ssnamenr, detection.mjd -- Sort by MPC name and detection date]
(Background on this error at: https://sqlalche.me/e/20/f405)",13.972781658172607,2025-07-24T07:55:33,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,96,6,"-- Final Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Define the Solar System objects of interest with their RA/Dec coordinates    SELECT '2003FP134' AS source_id, ra_value1 AS ra, dec_value1 AS dec    UNION ALL    SELECT '2009UK56' AS source_id, ra_value2 AS ra, dec_value2 AS dec)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd AS detection_date, -- Detection date    detection.fid AS filter_identifier, -- Filter identifier    detection.isdiffpos, -- Isdiffpos flag    detection.ra, -- RA coordinate    detection.dec, -- Dec coordinate    detection.magpsf AS difference_magnitude, -- Difference magnitude    detection.sigmapsf AS magnitude_uncertainty -- Magnitude uncertaintyFROM     ss_ztfINNER JOIN     catalog    ON q3c_radial_query(ss_ztf.ra, ss_ztf.dec, catalog.ra, catalog.dec, 0.0005556) -- Spatial filtering within 2 arcsecondsINNER JOIN     detection    ON ss_ztf.oid = detection.oid -- Join with detection table on oidWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter for specific Solar System objectsORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Sort by detection date","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,23.099454164505005,2025-07-23T19:48:43,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Define the Solar System objects of interest with their names    SELECT '2003FP134' AS ssnamenr    UNION ALL    SELECT '2009UK56' AS ssnamenr)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd AS detection_date, -- Detection date    detection.fid AS filter_identifier, -- Filter identifier    detection.isdiffpos, -- Isdiffpos flag    detection.ra, -- RA coordinate    detection.dec, -- Dec coordinate    detection.magpsf AS difference_magnitude, -- Difference magnitude    detection.sigmapsf AS magnitude_uncertainty -- Magnitude uncertaintyFROM     ss_ztfINNER JOIN     catalog    ON ss_ztf.ssnamenr = catalog.ssnamenr -- Match Solar System object namesINNER JOIN     detection    ON ss_ztf.oid = detection.oid -- Join with detection table on oidWHERE     ss_ztf.ssdistnr <= 2 / 3600.0 -- Filter for objects within 2 arcseconds (convert arcseconds to degrees)ORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Sort by detection date]
(Background on this error at: https://sqlalche.me/e/20/f405)",19.054981231689453,2025-07-24T07:55:59,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,96,7,"-- [FINAL QUERY HERE]SELECT     ss_ztf.*,    detection.mjd AS detection_date,    detection.fid AS filter_identifier,    detection.isdiffpos,    detection.ra,    detection.dec,    detection.magpsf AS difference_magnitude,    detection.sigmapsf AS magnitude_uncertaintyFROM     ss_ztfINNER JOIN     detection ON ss_ztf.oid = detection.oidWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56')    AND q3c_radial_query(detection.ra, detection.dec, ss_ztf.ra, ss_ztf.dec, 0.0005556)ORDER BY     ss_ztf.ssnamenr ASC,     detection.mjd ASC","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,25.67548441886902,2025-07-23T19:49:09,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]SELECT     ss_ztf.*,     detection.mjd AS detection_date,     detection.fid AS filter_identifier,     detection.isdiffpos,     detection.ra,     detection.dec,     detection.magpsf AS difference_magnitude,     detection.sigmapsf AS magnitude_uncertaintyFROM     ss_ztfINNER JOIN     detection ON     ss_ztf.candid = detection.candid -- Corrected the join condition to use 'candid' as it is the common key between the two tablesWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter for the specified Solar System object names    AND q3c_radial_query(detection.ra, detection.dec, ss_ztf.ssdistnr, ss_ztf.ssdistnr, 0.0005556) -- Corrected the q3c_radial_query to use the correct columns for RA and DecORDER BY     ss_ztf.ssnamenr ASC,     detection.mjd ASC]
(Background on this error at: https://sqlalche.me/e/20/f405)",13.70421051979065,2025-07-24T07:56:20,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,96,8,"-- Final Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd AS detection_date, -- Detection date    detection.fid AS filter_identifier, -- Filter identifier    detection.isdiffpos, -- Is difference positive flag    detection.ra, -- Right Ascension    detection.dec, -- Declination    detection.magpsf AS difference_magnitude, -- Difference magnitude    detection.sigmapsf AS magnitude_uncertainty -- Magnitude uncertaintyFROM     ss_ztfINNER JOIN     detectionON     ss_ztf.oid = detection.oid -- Join on object identifierWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter for specific Solar System identifiers    AND q3c_radial_query(ss_ztf.ra, ss_ztf.dec, detection.ra, detection.dec, 2/3600.0) -- Spatial query within 2 arcsecondsORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Sort by detection date","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,25.2930645942688,2025-07-23T19:49:34,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Final Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd AS detection_date, -- Detection date    detection.fid AS filter_identifier, -- Filter identifier    detection.isdiffpos, -- Is difference positive flag    detection.ra, -- Right Ascension    detection.dec, -- Declination    detection.magpsf AS difference_magnitude, -- Difference magnitude    detection.sigmapsf AS magnitude_uncertainty -- Magnitude uncertaintyFROM     ss_ztfINNER JOIN     detectionON     ss_ztf.candid = detection.candid -- Corrected join condition to use 'candid' as the common columnWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter for specific Solar System identifiers    AND q3c_radial_query(detection.ra, detection.dec, ss_ztf.ra, ss_ztf.dec, 2/3600.0) -- Corrected spatial query to use detection.ra/dec and ss_ztf.ra/decORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Sort by detection date]
(Background on this error at: https://sqlalche.me/e/20/f405)",14.98806619644165,2025-07-24T07:56:42,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,96,9,"-- Final Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Define the Solar System identifiers and their RA/Dec coordinates    VALUES        ('2003FP134', <ra_value1>, <dec_value1>), -- Replace <ra_value1> and <dec_value1> with actual RA/Dec values for 2003FP134        ('2009UK56', <ra_value2>, <dec_value2>)  -- Replace <ra_value2> and <dec_value2> with actual RA/Dec values for 2009UK56) AS catalog(source_id, ra, dec)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd, -- Detection date    detection.fid, -- Filter identifier    detection.isdiffpos, -- Difference image flag    detection.ra, -- Right ascension    detection.dec, -- Declination    detection.magpsf, -- Difference magnitude    detection.sigmapsf -- Difference magnitude uncertaintyFROM     ss_ztfINNER JOIN     detection ON ss_ztf.oid = detection.oid -- Join ss_ztf with detection table on oidINNER JOIN     catalog ON q3c_radial_query(ss_ztf.ra, ss_ztf.dec, catalog.ra, catalog.dec, 0.0005556) -- Spatial filtering within 2 arcsecondsWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter by Solar System identifiersORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Sort by detection date","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,21.893096208572388,2025-07-23T19:49:56,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Final Query to retrieve all detections for ZTF objects within 2 arcseconds of Solar System identifiers '2003FP134' and '2009UK56'WITH catalog AS (    -- Define the Solar System identifiers and their RA/Dec coordinates    SELECT         '2003FP134' AS source_id, <ra_value1> AS ra, <dec_value1> AS dec    UNION ALL    SELECT         '2009UK56' AS source_id, <ra_value2> AS ra, <dec_value2> AS dec)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd, -- Detection date    detection.fid, -- Filter identifier    detection.isdiffpos, -- Difference image flag    detection.ra, -- Right ascension    detection.dec, -- Declination    detection.magpsf, -- Difference magnitude    detection.sigmapsf -- Difference magnitude uncertaintyFROM     ss_ztfINNER JOIN     detection ON ss_ztf.candid = detection.candid -- Join ss_ztf with detection table on candidINNER JOIN     catalog ON q3c_radial_query(ss_ztf.ssdistnr, ss_ztf.ssmagnr, catalog.ra, catalog.dec, 0.0005556) -- Spatial filtering within 2 arcsecondsWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter by Solar System identifiersORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Sort by detection date]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.989335060119627,2025-07-24T07:57:02,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,96,10,"-- [FINAL QUERY HERE]WITH catalog AS (    -- Define the Solar System identifiers and their RA/Dec coordinates    VALUES        ('2003FP134', ra_value1, dec_value1), -- Replace ra_value1 and dec_value1 with actual coordinates        ('2009UK56', ra_value2, dec_value2)  -- Replace ra_value2 and dec_value2 with actual coordinates) AS catalog(source_id, ra, dec)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd, -- Detection date    detection.fid, -- Filter identifier    detection.isdiffpos, -- Difference image flag    detection.ra, -- Right ascension    detection.dec, -- Declination    detection.magpsf, -- Difference magnitude    detection.sigmapsf -- Difference magnitude uncertaintyFROM     ss_ztfINNER JOIN     detection ON ss_ztf.oid = detection.oid -- Join ss_ztf and detection tables on oidINNER JOIN     catalog ON q3c_radial_query(ss_ztf.ra, ss_ztf.dec, catalog.ra, catalog.dec, 0.0005556) -- Spatial filtering within 2 arcsecondsWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter by Solar System identifiersORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Sort by detection date","[""CREATE TABLE ss_ztf ( /* this table contains information about the closest known solar system object */\n    oid VARCHAR REFERENCES object(oid),\n    candid BIGINT NOT NULL, /* unique candidate identifier */\n    ssdistnr DOUBLE PRECISION, /* distance to nearest known solar system object */\n    ssmagnr DOUBLE PRECISION, /* magnitude of nearest known solar system object */\n    ssnamenr VARCHAR /* name to nearest known solar system object. If the object is not a known solar system object, this field is 'null' (VARCHAR) */\n    PRIMARY KEY (oid)\n);\nCREATE INDEX ix_ss_ztf_candid ON ss_ztf USING btree (candid);\nCREATE INDEX ix_ss_ztf_ssnamenr ON ss_ztf USING btree (ssnamenr);\n"", 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n']",advanced,30.969363927841187,2025-07-23T19:50:27,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH catalog AS (    -- Define the Solar System identifiers and their RA/Dec coordinates    SELECT         '2003FP134' AS source_id, ra_value1 AS ra, dec_value1 AS dec -- Replace ra_value1 and dec_value1 with actual coordinates    UNION ALL    SELECT         '2009UK56' AS source_id, ra_value2 AS ra, dec_value2 AS dec -- Replace ra_value2 and dec_value2 with actual coordinates)SELECT     ss_ztf.*, -- All columns from the ss_ztf table    detection.mjd, -- Detection date    detection.fid, -- Filter identifier    detection.isdiffpos, -- Difference image flag    detection.ra, -- Right ascension    detection.dec, -- Declination    detection.magpsf, -- Difference magnitude    detection.sigmapsf -- Difference magnitude uncertaintyFROM     ss_ztfINNER JOIN     detection ON ss_ztf.candid = detection.candid -- Join ss_ztf and detection tables on candidINNER JOIN     catalog ON q3c_radial_query(ss_ztf.ra, ss_ztf.dec, catalog.ra, catalog.dec, 0.0005556) -- Spatial filtering within 2 arcsecondsWHERE     ss_ztf.ssnamenr IN ('2003FP134', '2009UK56') -- Filter by Solar System identifiersORDER BY     ss_ztf.ssnamenr ASC, -- Sort by Solar System object name    detection.mjd ASC -- Sort by detection date]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.694062948226929,2025-07-24T07:57:23,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,,,94,0,"SELECT
    *
FROM
    object INNER JOIN
    reference
    ON object.oid = reference.oid
WHERE
    reference_change
LIMIT 50",,,,,"[             oid  ndethist  ncovhist  mjdstarthist    mjdendhist  corrected  \
0   ZTF18aaztkgj        49      2150  58280.369653  60875.311099       True   
1   ZTF18aaztkgj        49      2150  58280.369653  60875.311099       True   
2   ZTF18abvgizq       153      3264  58372.514653  60788.264722       True   
3   ZTF18abvgizq       153      3264  58372.514653  60788.264722       True   
4   ZTF18abncrip        79      1791  58346.370035  60825.471667       True   
5   ZTF18abncrip        79      1791  58346.370035  60825.471667       True   
6   ZTF18acddlti        14      4669  58287.333530  60709.561169       True   
7   ZTF18acddlti        14      4669  58287.333530  60709.561169       True   
8   ZTF18acddlti        14      4669  58287.333530  60709.561169       True   
9   ZTF18acddlti        14      4669  58287.333530  60709.561169       True   
10  ZTF19aadlmpv        50      1212  58495.254907  60339.297106       True   
11  ZTF19aadlmpv        50      1212  58495.254907  60339.297106       True   
12  ZTF19aadlmpv        50      1212  58495.254907  60339.297106       True   
13  ZTF18aacmgmy       220      1698  58365.500000  60168.500000       True   
14  ZTF18aacmgmy       220      1698  58365.500000  60168.500000       True   
15  ZTF18abjbija        19      1631  58284.500000  59877.250000       True   
16  ZTF18abjbija        19      1631  58284.500000  59877.250000       True   
17  ZTF18abvfqmw      1132      2690  58372.462986  60735.169954      False   
18  ZTF18abvfqmw      1132      2690  58372.462986  60735.169954      False   
19  ZTF18abtsunu        25      2161  58367.442963  60621.387593       True   
20  ZTF18abtsunu        25      2161  58367.442963  60621.387593       True   
21  ZTF19aaefxor        10       791  58507.250000  60013.250000       True   
22  ZTF19aaefxor        10       791  58507.250000  60013.250000       True   
23  ZTF18aazutgu       833      4228  58234.481401  60865.353287       True   
24  ZTF18aazutgu       833      4228  58234.481401  60865.353287       True   
25  ZTF18abnucsb        25      1474  58255.500000  59877.250000       True   
26  ZTF18abnucsb        25      1474  58255.500000  59877.250000       True   
27  ZTF19abagrzy       293      1285  58654.355162  60880.273704       True   
28  ZTF19abagrzy       293      1285  58654.355162  60880.273704       True   
29  ZTF18abcwifb       237      1612  58293.358333  60879.275174       True   
30  ZTF18abcwifb       237      1612  58293.358333  60879.275174       True   
31  ZTF18abbmwbx        10      1749  58285.420046  60512.232431       True   
32  ZTF18abbmwbx        10      1749  58285.420046  60512.232431       True   
33  ZTF18aasnigm        70      3578  58226.455521  60407.465776       True   
34  ZTF18aasnigm        70      3578  58226.455521  60407.465776       True   
35  ZTF18aasnigm        70      3578  58226.455521  60407.465776       True   
36  ZTF18aasnigm        70      3578  58226.455521  60407.465776       True   
37  ZTF18abwevhl       216      3876  58321.419005  60877.342049       True   
38  ZTF18abwevhl       216      3876  58321.419005  60877.342049       True   
39  ZTF18abgybgh        70      2320  58298.336667  60836.415324       True   
40  ZTF18abgybgh        70      2320  58298.336667  60836.415324       True   
41  ZTF18aazvetu         9      1891  58280.419780  60566.274537       True   
42  ZTF18aazvetu         9      1891  58280.419780  60566.274537       True   
43  ZTF20abvfrvd         4      1938  59082.291157  60709.554815       True   
44  ZTF20abvfrvd         4      1938  59082.291157  60709.554815       True   
45  ZTF17aaahtdl       305      1271  58097.353275  60732.172616       True   
46  ZTF17aaahtdl       305      1271  58097.353275  60732.172616       True   
47  ZTF18acruxst        93      2090  58097.262951  60761.199664       True   
48  ZTF18acruxst        93      2090  58097.262951  60761.199664       True   
49  ZTF18aazmxnc       535      2266  58247.461956  60872.413438       True   

    stellar  ndet   g_r_max  g_r_max_corr  ...  field      magnr  sigmagnr  \
0     False    29       NaN           NaN  ...    801  17.092001     0.015   
1     False    29       NaN           NaN  ...    801  14.671000     0.020   
2     False    38       NaN           NaN  ...    748  17.398000     0.017   
3     False    38       NaN           NaN  ...    748  16.731000     0.020   
4     False    45       NaN           NaN  ...    552  15.806999     0.017   
5     False    45       NaN           NaN  ...    552  15.809000     0.013   
6      True     5       NaN           NaN  ...    539  14.727000     0.014   
7      True     5       NaN           NaN  ...    538  14.160000     0.029   
8      True     5       NaN           NaN  ...    539  14.193000     0.017   
9      True     5       NaN           NaN  ...   1533  14.165999     0.017   
10    False    21  1.237713      0.552041  ...    361  15.181000     0.010   
11    False    21  1.237713      0.552041  ...    362  15.120999     0.011   
12    False    21  1.237713      0.552041  ...    361  14.700999     0.009   
13    False    92  1.484998      1.436091  ...    747  16.496000     0.013   
14    False    92  1.484998      1.436091  ...    747  15.065000     0.011   
15    False     8 -0.700687      0.185308  ...    591  13.325999     0.024   
16    False     8 -0.700687      0.185308  ...    591  13.434999     0.017   
17    False   313       NaN           NaN  ...    406  21.089000     0.102   
18    False   313       NaN           NaN  ...    406  18.148000     0.053   
19    False     9       NaN           NaN  ...    702  13.379000     0.021   
20    False     9       NaN           NaN  ...    702  12.910000     0.014   
21    False     7  1.201210      0.355317  ...    310  13.150000     0.014   
22    False     7  1.201210      0.355317  ...    310  13.431000     0.012   
23    False   296       NaN           NaN  ...    488  14.330000     0.018   
24    False   296       NaN           NaN  ...    540  14.312000     0.015   
25    False    13       NaN           NaN  ...    728  16.367000     0.014   
26    False    13       NaN           NaN  ...   1727  16.348000     0.024   
27    False   136       NaN           NaN  ...    282  18.287000     0.033   
28    False   136       NaN           NaN  ...    282  15.139999     0.028   
29    False   171       NaN           NaN  ...    385  16.692000     0.021   
30    False   171       NaN           NaN  ...    385  17.533000     0.016   
31     True     8  0.797300      0.599416  ...    435  13.848000     0.012   
32     True     8  0.797300      0.599416  ...    435  13.078000     0.023   
33    False    47  0.354450      0.794256  ...    638  16.009000     0.025   
34    False    47  0.354450      0.794256  ...    639  16.871000     0.016   
35    False    47  0.354450      0.794256  ...    639  15.985000     0.021   
36    False    47  0.354450      0.794256  ...    638  16.841000     0.016   
37    False    61       NaN           NaN  ...    596  18.654000     0.018   
38    False    61       NaN           NaN  ...    596  18.713000     0.019   
39    False    34       NaN           NaN  ...    540  18.013000     0.026   
40    False    34       NaN           NaN  ...    540  18.845000     0.030   
41    False     7       NaN           NaN  ...    591  13.980000     0.058   
42    False     7       NaN           NaN  ...    591  14.485000     0.025   
43     True     3       NaN           NaN  ...    486  16.504000     0.022   
44     True     3       NaN           NaN  ...   1480  15.243000     0.015   
45    False   158       NaN           NaN  ...    460  17.323000     0.022   
46    False   158       NaN           NaN  ...    460  18.073000     0.015   
47    False    52       NaN           NaN  ...    778  17.816000     0.014   
48    False    52       NaN           NaN  ...    778  19.722000     0.026   
49    False   201       NaN           NaN  ...    543  15.009000     0.012   

    chinr  sharpnr        ranr      decnr   mjdstartref     mjdendref  \
0   0.366   -0.003  311.165928  51.695023  58231.443345  58285.425359   
1   0.670   -0.034  311.165905  51.695018  58229.453519  58277.434005   
2   0.865   -0.047  121.467983  45.282690  58166.176250  58422.467419   
3   1.151   -0.026  121.467957  45.282720  58154.219630  58227.156713   
4   0.400   -0.034   15.493920  17.892526  58283.465891  58447.331424   
5   0.370   -0.015   15.493909  17.892540  58277.462847  58340.462176   
6   0.326    0.003  281.224415   9.155838  58204.507674  58254.418576   
7   0.919   -0.015  281.224454   9.155827  58333.234965  58333.282917   
8   0.538   -0.015  281.224420   9.155839  58186.533692  58293.315150   
9   0.372   -0.024  281.224457   9.155828  58338.250000  59393.500000   
10  0.484   -0.006  121.725193 -12.055832  58204.198056  58509.249711   
11  0.615   -0.021  121.725174 -12.055834  58204.221944  58480.460347   
12  0.301   -0.005  121.725201 -12.055829  58160.286146  58480.418368   
13  0.578   -0.033  107.522935  48.006135  58166.175752  58428.526690   
14  0.569   -0.016  107.522912  48.006157  58154.187604  58362.450023   
15  0.841    0.028  297.144720  17.415329  58218.497106  58342.325718   
16  0.683   -0.010  297.144719  17.415335  58203.507847  58279.372789   
17  2.116    0.206   71.424971  -2.412853  58344.483229  58371.500440   
18  5.027    0.264   71.425935  -2.411529  58338.481493  58437.351343   
19  1.106    0.090   71.359450  40.758783  58168.150498  58352.393762   
20  0.622    0.002   71.359453  40.758765  58160.224236  58437.365417   
21  0.223   -0.002  112.879948 -18.295044  58218.197523  58507.250683   
22  0.327    0.001  112.879946 -18.295034  58204.185903  58450.435382   
23  0.689   -0.030  291.057033   8.069085  58205.509873  58278.379167   
24  0.472   -0.024  291.057025   8.069059  58205.510799  58281.397396   
25  0.497   -0.031  295.117900  37.484847  58204.514352  58311.368912   
26  1.000   -0.004  295.117900  37.484854  58274.435579  58431.079850   
27  2.141    0.042  273.430498 -21.946385  58246.488067  58712.188414   
28  0.645    0.026  273.430452 -21.946341  58307.252465  58308.256644   
29  0.480    0.008  289.796184 -10.193378  58276.439375  58291.382292   
30  0.426   -0.029  289.796181 -10.193374  58246.461319  58348.337419   
31  0.226   -0.003  280.240227  -5.051898  58205.527373  58282.358414   
32  0.845   -0.039  280.240224  -5.051905  58217.505266  58338.191273   
33  0.925   -0.047  289.561871  23.888371  58186.529502  58313.386100   
34  0.606   -0.032  289.561818  23.888363  58203.506921  58244.456343   
35  0.651   -0.020  289.561820  23.888360  58186.532512  58256.452986   
36  0.416   -0.010  289.561864  23.888370  58203.506458  58303.405706   
37  0.690   -0.024  332.502717  18.735526  58247.483391  58282.434097   
38  0.499   -0.011  332.502716  18.735510  58244.482639  58379.309039   
39  0.706   -0.071  293.277090  11.235243  58273.418310  58341.304468   
40  0.879   -0.064  293.277085  11.235258  58205.510799  58293.420324   
41  2.991    0.082  296.601226  17.343608  58320.358449  58343.297500   
42  1.400    0.062  296.601221  17.343580  58203.507847  58276.374051   
43  1.152   -0.017  277.216058   1.950923  58204.529514  58334.302222   
44  0.325    0.013  277.216064   1.950909  58593.250000  59815.250000   
45  1.322   -0.044   96.564898   6.063620  58160.233762  58375.519780   
46  0.611   -0.020   96.564897   6.063610  58168.134433  58383.483854   
47  0.495   -0.043   57.186420  53.632785  58325.486377  58436.334352   
48  0.711   -0.037   57.186432  53.632786  58304.500000  58371.500000   
49  0.453   -0.018  311.200242  11.651241  58228.483241  58277.442801   

   nframesref  
0          15  
1          15  
2          16  
3          15  
4          28  
5          15  
6          15  
7          40  
8          23  
9          16  
10         15  
11         15  
12         15  
13         15  
14         15  
15         15  
16         15  
17         16  
18         16  
19         15  
20         15  
21         15  
22         17  
23         15  
24         15  
25         15  
26         17  
27         15  
28         40  
29         40  
30         15  
31         15  
32         15  
33         15  
34         15  
35         16  
36         15  
37         15  
38         15  
39         40  
40         20  
41         40  
42         15  
43         15  
44         16  
45         16  
46         15  
47         15  
48         15  
49         15  

[50 rows x 36 columns]]",,4.531790733337402,2025-07-24T07:57:27,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,94,1,"-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,22.20355105400085,2025-07-23T20:00:35,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.673834562301636,2025-07-24T07:57:43,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,94,2,"-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where the reference image has changed, limiting the result to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,33.746368169784546,2025-07-23T20:01:09,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where the reference image has changed, limiting the result to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.041614532470703,2025-07-24T07:57:57,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,94,3,"-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limiting the result to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,23.755464792251587,2025-07-23T20:01:32,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limiting the result to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.979670524597168,2025-07-24T07:58:12,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,94,4,"-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,20.364339351654053,2025-07-23T20:01:53,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.735005140304564,2025-07-24T07:58:27,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,94,5,"-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,18.596433639526367,2025-07-23T20:02:12,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.569015979766846,2025-07-24T07:58:43,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,94,6,-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects with a reference change-- Limit the result to 50 rowsSELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50,"['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,16.77010178565979,2025-07-23T20:02:28,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL QuerySELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",9.613399982452393,2025-07-24T07:58:57,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,94,7,"-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- that had a change in the reference image, limited to 50 rows.SELECT     object.*,     reference.* FROM     objectINNER JOIN     reference ON     object.oid = reference.oidWHERE     object.reference_change = TRUELIMIT 50","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,19.98659086227417,2025-07-23T20:02:49,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- that had a change in the reference image, limited to 50 rows.SELECT     object.*,     reference.* FROM     objectINNER JOIN     reference ON     object.oid = reference.oidWHERE     object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.667792320251465,2025-07-24T07:59:13,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,94,8,"-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limiting the result to 50 rows.SELECT     object.*,     reference.*FROM     objectINNER JOIN     referenceON     object.oid = reference.oidWHERE     object.reference_change = TRUELIMIT 50","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,19.28803539276123,2025-07-23T20:03:08,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limiting the result to 50 rows.SELECT     object.*,     reference.*FROM     objectINNER JOIN     referenceON     object.oid = reference.oidWHERE     object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.985596895217896,2025-07-24T07:59:29,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,94,9,"-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,17.697061777114868,2025-07-23T20:03:26,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected SQL Query-- Retrieve all columns from the 'object' and 'reference' tables for ZTF objects-- where there was a change in the reference image, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",10.882218837738035,2025-07-24T07:59:45,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,94,10,"-- Query to retrieve all columns from the 'object' and 'reference' tables-- for ZTF objects that had a change in the reference, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', '\nCREATE TABLE reference (\n    oid VARCHAR REFERENCES object(oid), /* unique identifier for this object */\n    rfid BIGINT, /* Processing ID for reference image to facilitate archive retrieval */\n    candid BIGINT NOT NULL, /* unique identifier for the subtraction candidate (first detection for the template) */\n    fid INTEGER NOT NULL, /* Filter ID (1=g; 2=r; 3=i) */\n    rcid INTEGER, /* Readout channel ID [00 .. 63] */\n    field INTEGER, /* ZTF field ID */\n    magnr DOUBLE PRECISION, /* magnitude of nearest source in reference image PSF-catalog within 30 arcsec [mag] */\n    sigmagnr DOUBLE PRECISION, /* 1-sigma uncertainty in magnr within 30 arcsec [mag] */\n    chinr DOUBLE PRECISION, /* DAOPhot chi parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    sharpnr DOUBLE PRECISION, /* DAOPhot sharp parameter of nearest source in reference image PSF-catalog within 30 arcsec */\n    ranr DOUBLE PRECISION NOT NULL, /* Right Ascension of nearest source in reference image PSF-catalog; J2000 [deg] */\n    decnr DOUBLE PRECISION NOT NULL, /* Declination of nearest source in reference image PSF-catalog; J2000 [deg] */\n    mjdstartref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of earliest exposure used to generate reference image [days] */\n    mjdendref DOUBLE PRECISION NOT NULL, /* Observation Modified Julian date of latest exposure used to generate reference image [days] */\n    nframesref INTEGER NOT NULL /* Number of frames (epochal images) used to generate reference image */\n    PRIMARY KEY (oid, rfid)\n);\n']",medium,16.29969334602356,2025-07-23T20:03:42,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected query to retrieve all columns from the 'object' and 'reference' tables-- for ZTF objects that had a change in the reference, limited to 50 rows.SELECT *FROM objectINNER JOIN reference ON object.oid = reference.oidWHERE object.reference_change = TRUELIMIT 50]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.003917455673218,2025-07-24T08:00:02,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,,,90,0,"SELECT
    *
FROM
    probability
WHERE
    classifier_name = 'lc_classifier'
    AND ranking <= 2
    AND oid in
(
SELECT
    oid
FROM
    feature
WHERE
    name = 'Multiband_period'
    AND version = 'lc_classifier_1.2.1-P'
    AND value < 5
LIMIT 100
)",,,,,"[              oid classifier_name     classifier_version class_name  \
0    ZTF19abdyprc   lc_classifier   lc_classifier_1.1.13        CEP   
1    ZTF19abdyprc   lc_classifier  hierarchical_rf_1.1.0       DSCT   
2    ZTF19abdyprc   lc_classifier   lc_classifier_1.1.13        RRL   
3    ZTF19abdyprc   lc_classifier  hierarchical_rf_1.1.0        RRL   
4    ZTF18abadjvy   lc_classifier  hierarchical_rf_1.1.0          E   
..            ...             ...                    ...        ...   
341  ZTF18abasovn   lc_classifier  hierarchical_rf_1.1.0          E   
342  ZTF18abasovn   lc_classifier   lc_classifier_1.1.13          E   
343  ZTF18abasovn   lc_classifier  hierarchical_rf_1.1.0        RRL   
344  ZTF22aabwnvh   lc_classifier  hierarchical_rf_1.1.0     Blazar   
345  ZTF22aabwnvh   lc_classifier  hierarchical_rf_1.1.0        QSO   

     probability  ranking  
0       0.161280        2  
1       0.283360        1  
2       0.190720        1  
3       0.227040        2  
4       0.093744        2  
..           ...      ...  
341     0.424664        1  
342     0.309624        1  
343     0.188956        2  
344     0.205800        2  
345     0.678160        1  

[346 rows x 6 columns]]",,5.014139413833618,2025-07-24T08:00:07,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,90,1,"-- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_features AS (    -- Subquery 1: Filter the 'feature' table for 'multiband_period' with value < 5 and specific version    SELECT oid    FROM feature    WHERE name = 'multiband_period'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter the 'probability' table for relevant objects and conditions    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND ranking IN (1, 2)      AND oid IN (SELECT oid FROM filtered_features))-- Final Query: Limit the results to 100 rowsSELECT *FROM filtered_probabilitiesLIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,31.50260758399964,2025-07-23T20:04:14,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Corrected Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_features AS (    -- Subquery 1: Filter the 'feature' table for 'multiband_period' with value < 5 and specific version    SELECT oid    FROM feature    WHERE name = 'multiband_period'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter the 'probability' table for relevant objects and conditions    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND ranking IN (1, 2)      AND oid IN (SELECT oid FROM filtered_features) -- Ensure the subquery is properly referenced)-- Final Query: Limit the results to 100 rowsSELECT *FROM filtered_probabilitiesLIMIT 100]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.061403751373293,2025-07-24T08:00:24,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,90,2,"-- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_features AS (    -- Subquery 1: Filter objects based on multiband period    SELECT oid    FROM feature    WHERE name = 'multiband_period'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter probabilities for the light curve classifier    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND ranking IN (1, 2))-- Combine the filters using an INNER JOINSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_features fON p.oid = f.oid-- Limit the results to at most 100 objectsLIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,30.014174222946167,2025-07-23T20:04:44,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_features AS (    -- Subquery 1: Filter objects based on multiband period    SELECT oid    FROM feature    WHERE name = 'multiband_period'  -- Ensure the feature name matches 'multiband_period'      AND value < 5                 -- Filter for periods lower than 5 days      AND version = 'lc_classifier_1.2.1-P'  -- Use the specified feature version),filtered_probabilities AS (    -- Subquery 2: Filter probabilities for the light curve classifier    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'  -- Filter for the light curve classifier      AND ranking IN (1, 2)                  -- Include rankings 1 and 2)-- Combine the filters using an INNER JOINSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_features fON p.oid = f.oid  -- Match objects based on their unique identifier-- Limit the results to at most 100 objectsLIMIT 100]
(Background on this error at: https://sqlalche.me/e/20/f405)",14.015388488769531,2025-07-24T08:00:44,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,90,3,"-- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings of 1 or 2.WITH filtered_features AS (    -- Subquery 1: Filter the 'feature' table for objects with multiband_period < 5    SELECT oid    FROM feature    WHERE name = 'multiband_period'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter the 'probability' table for the light curve classifier with rankings 1 or 2    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND (ranking = 1 OR ranking = 2))-- Final Query: Join the filtered results and limit to 100 rowsSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_features fON p.oid = f.oidLIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,22.95187830924988,2025-07-23T20:05:07,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings of 1 or 2.WITH filtered_features AS (    -- Subquery 1: Filter the 'feature' table for objects with multiband_period < 5    SELECT oid    FROM feature    WHERE name = 'multiband_period'       AND value < 5       AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter the 'probability' table for the light curve classifier with rankings 1 or 2    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'       AND ranking IN (1, 2) -- Simplified condition for rankings 1 or 2)-- Final Query: Join the filtered results and limit to 100 rowsSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_features fON p.oid = f.oidLIMIT 100]
(Background on this error at: https://sqlalche.me/e/20/f405)",21.642565965652462,2025-07-24T08:01:09,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,90,4,"-- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.SELECT *FROM probabilityWHERE oid IN (    -- Subquery to filter objects based on the 'feature' table    SELECT DISTINCT f.oid    FROM feature f    WHERE f.name = 'multiband_period'      AND f.value < 5      AND f.version = 'lc_classifier_1.2.1-P')AND classifier_name = 'lc_classifier'AND ranking IN (1, 2)LIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,25.2764630317688,2025-07-23T20:05:32,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.SELECT *FROM probabilityWHERE oid IN (    -- Subquery to filter objects based on the 'feature' table    SELECT DISTINCT f.oid    FROM feature f    WHERE f.name = 'multiband_period'  -- Correct feature name      AND f.value < 5                 -- Multiband period lower than 5 days      AND f.version = 'lc_classifier_1.2.1-P' -- Correct feature version)AND classifier_name = 'lc_classifier' -- Light curve classifier conditionAND ranking IN (1, 2)                 -- Rankings 1 or 2LIMIT 100                            -- Limit to at most 100 objects]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.682477712631226,2025-07-24T08:01:26,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,90,5,"-- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- and return all columns from the 'probability' table for the light curve classifier-- with rankings either 1 or 2.WITH filtered_objects AS (    -- Subquery 1: Filter objects based on multiband period    SELECT DISTINCT oid    FROM feature    WHERE name = 'multiband_period'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter probabilities for light curve classifier    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND ranking IN (1, 2))-- Final Query: Join the filtered objects with the filtered probabilitiesSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_objects oON p.oid = o.oidLIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,33.1457622051239,2025-07-23T20:06:05,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- and return all columns from the 'probability' table for the light curve classifier-- with rankings either 1 or 2.WITH filtered_objects AS (    -- Subquery 1: Filter objects based on multiband period    SELECT DISTINCT oid    FROM feature    WHERE name = 'multiband_period'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter probabilities for light curve classifier    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND ranking IN (1, 2))-- Final Query: Join the filtered objects with the filtered probabilitiesSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_objects oON p.oid = o.oidLIMIT 100]
(Background on this error at: https://sqlalche.me/e/20/f405)",18.346968173980713,2025-07-24T09:18:36,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,90,6,"-- Final Query to retrieve at most 100 ZTF objects with the specified conditionsWITH filtered_objects AS (    -- Subquery 1: Filter objects based on the 'multiband_period' feature    SELECT DISTINCT f.oid    FROM feature f    INNER JOIN object o ON f.oid = o.oid    WHERE f.name = 'multiband_period'      AND f.value < 5      AND f.version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter probabilities for the selected objects    SELECT p.*    FROM probability p    INNER JOIN filtered_objects fo ON p.oid = fo.oid    WHERE p.classifier_name = 'lc_classifier'      AND p.ranking IN (1, 2))-- Final Query: Retrieve all columns from the 'probability' table for the filtered objectsSELECT *FROM filtered_probabilitiesLIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,22.64985418319702,2025-07-23T20:06:28,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Final Query to retrieve at most 100 ZTF objects with the specified conditionsWITH filtered_objects AS (    -- Subquery 1: Filter objects based on the 'multiband_period' feature    SELECT DISTINCT f.oid    FROM feature f    INNER JOIN object o ON f.oid = o.oid    WHERE f.name = 'multiband_period'       AND f.value < 5       AND f.version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter probabilities for the selected objects    SELECT p.*    FROM probability p    INNER JOIN filtered_objects fo ON p.oid = fo.oid    WHERE p.classifier_name = 'lc_classifier'       AND p.ranking IN (1, 2))-- Final Query: Retrieve all columns from the 'probability' table for the filtered objectsSELECT *FROM filtered_probabilitiesLIMIT 100]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.890123128890991,2025-07-24T09:18:54,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,90,7,"-- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_features AS (    -- Subquery to filter objects based on the multiband period condition    SELECT oid    FROM feature    WHERE name = 'multiband_period'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery to filter probabilities for the light curve classifier with rankings 1 or 2    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND ranking IN (1, 2))-- Combine the results of the two subqueries using an INNER JOINSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_features fON p.oid = f.oidLIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,23.84159469604492,2025-07-23T20:06:52,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_features AS (    -- Subquery to filter objects based on the multiband period condition    SELECT oid    FROM feature    WHERE name = 'multiband_period'  -- Ensure the feature name matches the condition      AND value < 5                 -- Multiband period lower than 5 days      AND version = 'lc_classifier_1.2.1-P' -- Specific feature version),filtered_probabilities AS (    -- Subquery to filter probabilities for the light curve classifier with rankings 1 or 2    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier' -- Light curve classifier      AND ranking IN (1, 2)                 -- Rankings 1 or 2)-- Combine the results of the two subqueries using an INNER JOINSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_features fON p.oid = f.oid -- Match objects based on their unique identifierLIMIT 100 -- Limit the result to at most 100 objects]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.724361181259155,2025-07-24T09:19:12,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,90,8,"-- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- and return all columns from the 'probability' table for the light curve classifier-- with rankings of 1 or 2.WITH filtered_objects AS (    -- Sub-query to filter objects based on the multiband period    SELECT DISTINCT oid    FROM feature    WHERE name = 'MultibandPeriod'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Sub-query to filter classification data from the probability table    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND ranking IN (1, 2))-- Combine results by performing an INNER JOIN on the oid columnSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_objects oON p.oid = o.oidLIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,34.20009136199951,2025-07-23T20:07:26,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- and return all columns from the 'probability' table for the light curve classifier-- with rankings of 1 or 2.WITH filtered_objects AS (    -- Sub-query to filter objects based on the multiband period    SELECT DISTINCT oid    FROM feature    WHERE name = 'MultibandPeriod'       AND value < 5       AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Sub-query to filter classification data from the probability table    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'       AND ranking IN (1, 2))-- Combine results by performing an INNER JOIN on the oid columnSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_objects oON p.oid = o.oidLIMIT 100]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.412117004394531,2025-07-24T09:19:29,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,90,9,"-- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_objects AS (    -- Subquery 1: Filter objects based on multiband period    SELECT DISTINCT oid    FROM feature    WHERE name = 'MultibandPeriod'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter probabilities for light curve classifier    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND ranking IN (1, 2))-- Combine the two subqueries using an INNER JOINSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_objects oON p.oid = o.oid-- Limit the results to at most 100 objectsLIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,24.927523612976078,2025-07-23T20:07:51,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_objects AS (    -- Subquery 1: Filter objects based on multiband period    SELECT DISTINCT oid    FROM feature    WHERE name = 'MultibandPeriod'       AND value < 5       AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Subquery 2: Filter probabilities for light curve classifier    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'       AND ranking IN (1, 2))-- Combine the two subqueries using an INNER JOINSELECT p.*FROM filtered_probabilities pINNER JOIN filtered_objects oON p.oid = o.oid-- Limit the results to at most 100 objectsLIMIT 100]
(Background on this error at: https://sqlalche.me/e/20/f405)",12.182871103286743,2025-07-24T09:19:46,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,90,10,"-- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_objects AS (    -- Step 1: Filter objects based on the multiband period    SELECT DISTINCT oid    FROM feature    WHERE name = 'MultibandPeriod'      AND value < 5      AND version = 'lc_classifier_1.2.1-P'),filtered_probabilities AS (    -- Step 2: Filter probabilities for the relevant objects    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier'      AND ranking IN (1, 2)      AND oid IN (SELECT oid FROM filtered_objects))-- Step 3: Limit the results to at most 100 objectsSELECT *FROM filtered_probabilitiesLIMIT 100","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE feature ( /* table with features for a given object, each row contains one feature per object */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    name VARCHAR NOT NULL, /* name of the feature */\n    value DOUBLE PRECISION, /* value of the feature */\n    fid INTEGER NOT NULL, /* which bandpass this is based (1: g, 2: r, 3: i, 12: gr, 13: gi, 23: ri, 123: gri, ) */\n    version VARCHAR REFERENCES feature_version(version) NOT NULL, /* version of the features (see table feature_version) */\n    PRIMARY KEY (oid, name, fid, version)\n);\nCREATE INDEX ix_feature_oid_2 ON feature USING hash (oid);\n', '\nCREATE TABLE feature_version (\n    version VARCHAR PRIMARY KEY, /* feature processing version */\n    step_id_feature VARCHAR REFERENCES step(step_id), /* feture step docker id*/\n    step_id_preprocess VARCHAR REFERENCES step(step_id) /* preprocess step docker id*/\n);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n']",advanced,29.481520652771,2025-07-23T20:08:21,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- Final Query to retrieve at most 100 ZTF objects with a multiband period lower than 5 days-- in the 'lc_classifier_1.2.1-P' feature version, returning all columns from the 'probability' table-- for the light curve classifier with rankings 1 or 2.WITH filtered_objects AS (    -- Step 1: Filter objects based on the multiband period    SELECT DISTINCT oid    FROM feature    WHERE name = 'MultibandPeriod' -- Ensure the feature name matches 'MultibandPeriod'      AND value < 5 -- Multiband period lower than 5 days      AND version = 'lc_classifier_1.2.1-P' -- Feature version specified by the user),filtered_probabilities AS (    -- Step 2: Filter probabilities for the relevant objects    SELECT *    FROM probability    WHERE classifier_name = 'lc_classifier' -- Light curve classifier condition      AND ranking IN (1, 2) -- Rankings 1 or 2 as specified      AND oid IN (SELECT oid FROM filtered_objects) -- Match objects filtered in Step 1)-- Step 3: Limit the results to at most 100 objectsSELECT *FROM filtered_probabilitiesLIMIT 100]
(Background on this error at: https://sqlalche.me/e/20/f405)",15.691080093383789,2025-07-24T09:20:06,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,,,39,0,"SELECT
  sq.oid, sq.meanra, sq.meandec,
  detection.candid, detection.fid as f_id,detection.magpsf, detection.sigmapsf_corr, detection.sigmapsf_corr_ext
FROM
  (
SELECT
    object.oid, object.meanra, object.meandec, object.ndet
FROM
    object INNER JOIN
    probability
    ON object.oid = probability.oid
WHERE
    probability.classifier_name='lc_classifier_stochastic'
    AND probability.class_name='CV/Nova'
    AND probability.ranking = 1
) AS sq
  INNER JOIN detection
  ON sq.oid = detection.oid
WHERE
  sq.ndet < 50
  AND detection.fid = 2
ORDER BY oid
LIMIT 1000
",,,,,"[              oid      meanra    meandec               candid  f_id  \
0    ZTF17aaaaanb  324.816860  45.593583   537475640115015008     2   
1    ZTF17aaaaanb  324.816860  45.593583   607270780115015027     2   
2    ZTF17aaaaanb  324.816860  45.593583   613325340115010003     2   
3    ZTF17aaaaanb  324.816860  45.593583   536383390115015014     2   
4    ZTF17aaaaanb  324.816860  45.593583   529390300115015005     2   
..            ...         ...        ...                  ...   ...   
995  ZTF17aaadgdr  116.399044  32.744831  2793498875315010003     2   
996  ZTF17aaadgdr  116.399044  32.744831  2784509095315010123     2   
997  ZTF17aaadgdr  116.399044  32.744831  2494492412515010004     2   
998  ZTF17aaadgdr  116.399044  32.744831  2203255402515010007     2   
999  ZTF17aaadine  101.589363  -3.744657  2094499972315015001     2   

        magpsf  sigmapsf_corr  sigmapsf_corr_ext  
0    19.760700       0.021343           0.031418  
1    19.648392       0.026439           0.034795  
2    19.791729       0.025855           0.043814  
3    19.882864       0.022219           0.032339  
4    19.678644     100.000000           0.019559  
..         ...            ...                ...  
995  16.723570     100.000000           0.024235  
996  17.873495       0.013963           0.024816  
997  17.323240     100.000000           0.013592  
998  16.954084       0.001079           0.019867  
999  17.999685       0.008147           0.013642  

[1000 rows x 8 columns]]",,8.480021715164185,2025-07-24T09:20:15,1.0,1.0,1.0,1.0,1.0,1.0
0.20.1,gpt-4o-2024-11-20,v4,39,1,"-- [FINAL QUERY HERE]WITH filtered_probabilities AS (    SELECT         oid    FROM         probability    WHERE         ranking = 1        AND class_name = 'CV/Nova'        AND classifier_name = 'lc_classifier_stochastic'),filtered_objects AS (    SELECT         o.oid,         o.meanra,         o.meandec,         o.ndet    FROM         object o    INNER JOIN         filtered_probabilities fp    ON         o.oid = fp.oid    WHERE         o.ndet <= 50),r_band_detections AS (    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.magpsf    FROM         detection d    INNER JOIN         filtered_objects fo    ON         d.oid = fo.oid    WHERE         d.fid = 2),r_band_magstats AS (    SELECT         m.oid,         (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects fo    ON         m.oid = fo.oid    WHERE         m.fid = 2)SELECT     rbd.oid,     rbd.candid,     rbd.fid AS f_id,     fo.meanra AS ra,     fo.meandec AS dec,     rbd.magpsf_corr,     rbd.magpsf,     rbm.max_riseFROM     r_band_detections rbdINNER JOIN     filtered_objects foON     rbd.oid = fo.oidINNER JOIN     r_band_magstats rbmON     rbd.oid = rbm.oidORDER BY     rbd.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,45.71933388710022,2025-07-23T20:22:48,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH filtered_probabilities AS (    -- Filter probabilities for the most likely class 'CV/Nova' using the stochastic light curve classifier    SELECT         oid    FROM         probability    WHERE         ranking = 1        AND class_name = 'CV/Nova'        AND classifier_name = 'lc_classifier_stochastic'),filtered_objects AS (    -- Filter objects with at most 50 detections and join with filtered probabilities    SELECT         o.oid,         o.meanra,         o.meandec,         o.ndet    FROM         object o    INNER JOIN         filtered_probabilities fp    ON         o.oid = fp.oid    WHERE         o.ndet <= 50),r_band_detections AS (    -- Select detections in the r-band (fid = 2) and join with filtered objects    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.magpsf    FROM         detection d    INNER JOIN         filtered_objects fo    ON         d.oid = fo.oid    WHERE         d.fid = 2),r_band_magstats AS (    -- Calculate the maximum rise (magmax_corr - magmin_corr) in the r-band (fid = 2) and join with filtered objects    SELECT         m.oid,         (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects fo    ON         m.oid = fo.oid    WHERE         m.fid = 2)-- Final query to combine all the results and retrieve the required columnsSELECT     rbd.oid,     rbd.candid,     rbd.fid AS f_id,     fo.meanra AS ra,     fo.meandec AS dec,     rbd.magpsf_corr,     rbd.magpsf,     rbm.max_riseFROM     r_band_detections rbdINNER JOIN     filtered_objects foON     rbd.oid = fo.oidINNER JOIN     r_band_magstats rbmON     rbd.oid = rbm.oidORDER BY     rbd.oidLIMIT 1000]
(Background on this error at: https://sqlalche.me/e/20/f405)",23.092419147491455,2025-07-24T09:20:44,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,39,2,"-- [FINAL QUERY HERE]WITH classified_objects AS (    SELECT         p.oid    FROM         probability p    WHERE         p.class_name = 'CV/Nova'        AND p.classifier_name = 'lc_classifier_stochastic'        AND p.ranking = 1),filtered_objects AS (    SELECT         o.oid,         o.meanra AS ra,         o.meandec AS dec    FROM         object o    INNER JOIN         classified_objects co ON o.oid = co.oid    WHERE         o.ndet <= 50),r_band_detections AS (    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.sigmapsf_corr    FROM         detection d    WHERE         d.fid = 2),r_band_magstats AS (    SELECT         m.oid,         (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    WHERE         m.fid = 2)SELECT     fo.oid,     rbd.candid,     rbd.fid,     fo.ra,     fo.dec,     rbd.magpsf_corr,     rbd.sigmapsf_corr,     rbm.max_riseFROM     filtered_objects foINNER JOIN     r_band_detections rbd ON fo.oid = rbd.oidINNER JOIN     r_band_magstats rbm ON fo.oid = rbm.oidORDER BY     fo.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,34.42355036735535,2025-07-23T20:23:23,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH classified_objects AS (    -- Step 1: Select objects classified as 'CV/Nova' by the stochastic light curve classifier with the highest probability ranking    SELECT         p.oid    FROM         probability p    WHERE         p.class_name = 'CV/Nova'         AND p.classifier_name = 'lc_classifier_stochastic'         AND p.ranking = 1),filtered_objects AS (    -- Step 2: Filter objects with at most 50 detections and retrieve their coordinates    SELECT         o.oid,         o.meanra AS ra,         o.meandec AS dec    FROM         object o    INNER JOIN         classified_objects co ON o.oid = co.oid    WHERE         o.ndet <= 50),r_band_detections AS (    -- Step 3: Retrieve detections in the r-band filter (fid = 2) with corrected magnitudes    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.sigmapsf_corr    FROM         detection d    WHERE         d.fid = 2),r_band_magstats AS (    -- Step 4: Calculate the maximum rise in corrected magnitudes for the r-band filter    SELECT         m.oid,         (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    WHERE         m.fid = 2)-- Step 5: Combine all the results and retrieve the required columnsSELECT     fo.oid,     rbd.candid,     rbd.fid,     fo.ra,     fo.dec,     rbd.magpsf_corr,     rbd.sigmapsf_corr,     rbm.max_riseFROM     filtered_objects foINNER JOIN     r_band_detections rbd ON fo.oid = rbd.oidINNER JOIN     r_band_magstats rbm ON fo.oid = rbm.oidORDER BY     fo.oidLIMIT 1000]
(Background on this error at: https://sqlalche.me/e/20/f405)",17.064841985702515,2025-07-24T09:21:07,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,39,3,"-- [FINAL QUERY HERE]WITH filtered_objects AS (    SELECT         p.oid    FROM         probability p    INNER JOIN         object o ON p.oid = o.oid    WHERE         p.class_name = 'CV/Nova'        AND p.classifier_name = 'lc_classifier_stochastic'        AND p.ranking = 1        AND o.ndet <= 50),r_band_detections AS (    SELECT         d.oid,        d.candid,        d.fid,        d.ra,        d.dec,        d.magpsf_corr,        d.sigmapsf_corr    FROM         detection d    INNER JOIN         filtered_objects fo ON d.oid = fo.oid    WHERE         d.fid = 2 -- r-band filter),r_band_magstats AS (    SELECT         m.oid,        (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects fo ON m.oid = fo.oid    WHERE         m.fid = 2 -- r-band filter)SELECT     rbd.oid,    rbd.candid,    rbd.fid AS f_id,    rbd.ra,    rbd.dec,    rbd.magpsf_corr,    rbd.sigmapsf_corr,    rbm.max_riseFROM     r_band_detections rbdLEFT JOIN     r_band_magstats rbm ON rbd.oid = rbm.oidORDER BY     rbd.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,29.421626806259155,2025-07-23T20:23:52,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH filtered_objects AS (    -- Filter objects classified as 'CV/Nova' by the stochastic light curve classifier    -- with ranking = 1 and number of detections <= 50    SELECT         p.oid    FROM         probability p    INNER JOIN         object o ON p.oid = o.oid    WHERE         p.class_name = 'CV/Nova' -- Class name        AND p.classifier_name = 'lc_classifier_stochastic' -- Stochastic light curve classifier        AND p.ranking = 1 -- Most likely probability        AND o.ndet <= 50 -- Number of detections <= 50),r_band_detections AS (    -- Select detections in the r-band filter (fid = 2) for the filtered objects    SELECT         d.oid,        d.candid,        d.fid,        d.ra,        d.dec,        d.magpsf_corr,        d.sigmapsf_corr    FROM         detection d    INNER JOIN         filtered_objects fo ON d.oid = fo.oid    WHERE         d.fid = 2 -- r-band filter),r_band_magstats AS (    -- Calculate the maximum rise (magmax_corr - magmin_corr) in the r-band filter for the filtered objects    SELECT         m.oid,        (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects fo ON m.oid = fo.oid    WHERE         m.fid = 2 -- r-band filter)-- Combine the r-band detections with the calculated maximum riseSELECT     rbd.oid,    rbd.candid,    rbd.fid AS f_id,    rbd.ra,    rbd.dec,    rbd.magpsf_corr,    rbd.sigmapsf_corr,    rbm.max_riseFROM     r_band_detections rbdLEFT JOIN     r_band_magstats rbm ON rbd.oid = rbm.oidORDER BY     rbd.oidLIMIT 1000]
(Background on this error at: https://sqlalche.me/e/20/f405)",14.946743726730347,2025-07-24T09:21:28,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,39,4,"-- [FINAL QUERY HERE]WITH classified_objects AS (    -- Step 1: Filter objects classified as 'CV/Nova' with the highest probability    SELECT p.oid    FROM probability p    WHERE p.class_name = 'CV/Nova'      AND p.classifier_name = 'lc_classifier_stochastic'      AND p.ranking = 1),filtered_objects AS (    -- Step 2: Filter objects with ndet <= 50    SELECT o.oid, o.meanra AS ra, o.meandec AS dec    FROM object o    INNER JOIN classified_objects co ON o.oid = co.oid    WHERE o.ndet <= 50),r_band_detections AS (    -- Step 3: Filter detections in the r-band filter (fid = 2)    SELECT d.oid, d.candid, d.fid, d.magpsf_corr, d.sigmapsf_corr    FROM detection d    INNER JOIN filtered_objects fo ON d.oid = fo.oid    WHERE d.fid = 2),magnitude_stats AS (    -- Step 4: Calculate maximum rise in magnitude for the r-band filter    SELECT m.oid, (m.magmax_corr - m.magmin_corr) AS max_rise    FROM magstat m    WHERE m.fid = 2)-- Step 5: Combine results and limit to 1000 rowsSELECT rbd.oid, rbd.candid, rbd.fid AS f_id, fo.ra, fo.dec,        rbd.magpsf_corr, rbd.sigmapsf_corr, ms.max_riseFROM r_band_detections rbdINNER JOIN filtered_objects fo ON rbd.oid = fo.oidINNER JOIN magnitude_stats ms ON rbd.oid = ms.oidORDER BY rbd.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,29.58437752723694,2025-07-23T20:24:22,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH classified_objects AS (    -- Step 1: Filter objects classified as 'CV/Nova' with the highest probability    SELECT p.oid    FROM probability p    WHERE p.class_name = 'CV/Nova'      AND p.classifier_name = 'lc_classifier_stochastic'      AND p.ranking = 1),filtered_objects AS (    -- Step 2: Filter objects with ndet <= 50    SELECT o.oid, o.meanra AS ra, o.meandec AS dec    FROM object o    INNER JOIN classified_objects co ON o.oid = co.oid    WHERE o.ndet <= 50),r_band_detections AS (    -- Step 3: Filter detections in the r-band filter (fid = 2)    SELECT d.oid, d.candid, d.fid, d.magpsf_corr, d.sigmapsf_corr    FROM detection d    INNER JOIN filtered_objects fo ON d.oid = fo.oid    WHERE d.fid = 2),magnitude_stats AS (    -- Step 4: Calculate maximum rise in magnitude for the r-band filter    SELECT m.oid, (m.magmax_corr - m.magmin_corr) AS max_rise    FROM magstat m    WHERE m.fid = 2)-- Step 5: Combine results and limit to 1000 rowsSELECT rbd.oid, rbd.candid, rbd.fid AS f_id, fo.ra, fo.dec,        rbd.magpsf_corr, rbd.sigmapsf_corr, ms.max_riseFROM r_band_detections rbdINNER JOIN filtered_objects fo ON rbd.oid = fo.oidINNER JOIN magnitude_stats ms ON rbd.oid = ms.oidORDER BY rbd.oidLIMIT 1000]
(Background on this error at: https://sqlalche.me/e/20/f405)",14.02916693687439,2025-07-24T09:21:48,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,39,5,"-- [FINAL QUERY HERE]WITH filtered_objects AS (    SELECT         p.oid    FROM         probability p    INNER JOIN         object o ON p.oid = o.oid    WHERE         p.ranking = 1        AND p.classifier_name = 'lc_classifier'        AND p.class_name = 'CV/Nova'        AND o.ndet <= 50),r_band_detections AS (    SELECT         d.oid,        d.candid,        d.fid,        d.ra AS meanra,        d.dec AS meandec,        d.magpsf_corr,        d.magpsf    FROM         detection d    INNER JOIN         filtered_objects fo ON d.oid = fo.oid    WHERE         d.fid = 2 -- r-band filter),r_band_magstats AS (    SELECT         m.oid,        m.fid,        (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects fo ON m.oid = fo.oid    WHERE         m.fid = 2 -- r-band filter)SELECT     rbd.oid,    rbd.candid,    rbd.fid AS f_id,    rbd.meanra,    rbd.meandec,    rbd.magpsf_corr,    rbd.magpsf,    rbm.max_riseFROM     r_band_detections rbdINNER JOIN     r_band_magstats rbm ON rbd.oid = rbm.oid AND rbd.fid = rbm.fidORDER BY     rbd.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,26.56500649452209,2025-07-23T20:24:48,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH filtered_objects AS (    -- Filter objects classified as 'CV/Nova' by the 'lc_classifier' with ranking = 1 and ndet <= 50    SELECT         p.oid    FROM         probability p    INNER JOIN         object o ON p.oid = o.oid    WHERE         p.ranking = 1        AND p.classifier_name = 'lc_classifier'        AND p.class_name = 'CV/Nova'        AND o.ndet <= 50),r_band_detections AS (    -- Select detections in the r-band (fid = 2) for the filtered objects    SELECT         d.oid,        d.candid,        d.fid,        d.ra AS meanra,        d.dec AS meandec,        d.magpsf_corr,        d.magpsf    FROM         detection d    INNER JOIN         filtered_objects fo ON d.oid = fo.oid    WHERE         d.fid = 2 -- r-band filter),r_band_magstats AS (    -- Calculate the maximum rise (magmax_corr - magmin_corr) in the r-band (fid = 2) for the filtered objects    SELECT         m.oid,        m.fid,        (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects fo ON m.oid = fo.oid    WHERE         m.fid = 2 -- r-band filter)-- Combine the r-band detections and r-band magstats to get the final resultSELECT     rbd.oid,    rbd.candid,    rbd.fid AS f_id,    rbd.meanra,    rbd.meandec,    rbd.magpsf_corr,    rbd.magpsf,    rbm.max_riseFROM     r_band_detections rbdINNER JOIN     r_band_magstats rbm ON rbd.oid = rbm.oid AND rbd.fid = rbm.fidORDER BY     rbd.oidLIMIT 1000]
(Background on this error at: https://sqlalche.me/e/20/f405)",16.252731561660767,2025-07-24T09:22:10,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,39,6,"-- [FINAL QUERY HERE]WITH filtered_objects AS (    SELECT         o.oid,        o.ndet    FROM         object o    INNER JOIN         probability p    ON         o.oid = p.oid    WHERE         p.ranking = 1        AND p.class_name = 'CV/Nova'        AND p.classifier_name = 'lc_classifier_stochastic'        AND o.ndet <= 50),r_band_detections AS (    SELECT         d.oid,        d.candid,        d.fid,        d.ra,        d.dec,        d.magpsf_corr,        d.sigmapsf_corr    FROM         detection d    INNER JOIN         filtered_objects fo    ON         d.oid = fo.oid    WHERE         d.fid = 2),magnitude_stats AS (    SELECT         oid,        MAX(magpsf_corr) - MIN(magpsf_corr) AS max_rise    FROM         r_band_detections    GROUP BY         oid)SELECT     rbd.oid,    rbd.candid,    rbd.fid AS f_id,    rbd.ra,    rbd.dec,    rbd.magpsf_corr,    rbd.sigmapsf_corr,    ms.max_riseFROM     r_band_detections rbdINNER JOIN     magnitude_stats msON     rbd.oid = ms.oidORDER BY     rbd.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,24.45722913742065,2025-07-23T20:25:13,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH filtered_objects AS (    -- Step 1: Filter objects with the highest probability class as 'CV/Nova' by the stochastic light curve classifier    -- and with a number of detections (ndet) of at most 50.    SELECT         o.oid,        o.ndet    FROM         object o    INNER JOIN         probability p    ON         o.oid = p.oid    WHERE         p.ranking = 1 -- Default condition for the most likely probability        AND p.class_name = 'CV/Nova' -- Filter for 'CV/Nova' class        AND p.classifier_name = 'lc_classifier_stochastic' -- Stochastic light curve classifier        AND o.ndet <= 50 -- Filter for objects with at most 50 detections),r_band_detections AS (    -- Step 2: Filter detections in the r-band (fid = 2) for the objects identified in the previous step.    SELECT         d.oid,        d.candid,        d.fid,        d.ra,        d.dec,        d.magpsf_corr,        d.sigmapsf_corr    FROM         detection d    INNER JOIN         filtered_objects fo    ON         d.oid = fo.oid    WHERE         d.fid = 2 -- Filter for r-band detections),magnitude_stats AS (    -- Step 3: Calculate the maximum rise in corrected magnitude (max_rise) for each object in the r-band.    SELECT         oid,        MAX(magpsf_corr) - MIN(magpsf_corr) AS max_rise    FROM         r_band_detections    GROUP BY         oid)-- Step 4: Combine the r-band detections with the calculated max_rise and return the first 1000 rows ordered by object identifier.SELECT     rbd.oid,    rbd.candid,    rbd.fid AS f_id,    rbd.ra,    rbd.dec,    rbd.magpsf_corr,    rbd.sigmapsf_corr,    ms.max_riseFROM     r_band_detections rbdINNER JOIN     magnitude_stats msON     rbd.oid = ms.oidORDER BY     rbd.oidLIMIT 1000]
(Background on this error at: https://sqlalche.me/e/20/f405)",16.244393348693848,2025-07-24T09:22:31,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,39,7,"-- [FINAL QUERY HERE]WITH filtered_objects AS (    -- Step 1: Filter objects classified as 'CV/Nova' with the highest probability    SELECT         p.oid    FROM         probability p    WHERE         p.class_name = 'CV/Nova'        AND p.classifier_name = 'lc_classifier_stochastic'        AND p.ranking = 1),filtered_objects_with_detections AS (    -- Step 2: Filter objects with ndet <= 50    SELECT         o.oid    FROM         object o    INNER JOIN         filtered_objects fo ON o.oid = fo.oid    WHERE         o.ndet <= 50),detection_data AS (    -- Step 3: Retrieve detection-level data for r-band filter (fid = 2)    SELECT         d.oid,        d.candid,        d.fid,        d.ra,        d.dec,        d.magpsf_corr,        d.sigmapsf_corr    FROM         detection d    INNER JOIN         filtered_objects_with_detections fod ON d.oid = fod.oid    WHERE         d.fid = 2),magnitude_stats AS (    -- Step 4: Calculate maximum rise from minimum magnitude for r-band filter (fid = 2)    SELECT         m.oid,        (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects_with_detections fod ON m.oid = fod.oid    WHERE         m.fid = 2)-- Step 5: Combine results and limit to 1000 rowsSELECT     dd.oid,    dd.candid,    dd.fid AS f_id,    dd.ra,    dd.dec,    dd.magpsf_corr,    dd.sigmapsf_corr,    ms.max_riseFROM     detection_data ddINNER JOIN     magnitude_stats ms ON dd.oid = ms.oidORDER BY     dd.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,30.90203070640564,2025-07-23T20:25:44,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH filtered_objects AS (    -- Step 1: Filter objects classified as 'CV/Nova' with the highest probability    SELECT         p.oid    FROM         probability p    WHERE         p.class_name = 'CV/Nova'         AND p.classifier_name = 'lc_classifier_stochastic'         AND p.ranking = 1),filtered_objects_with_detections AS (    -- Step 2: Filter objects with ndet <= 50    SELECT         o.oid    FROM         object o    INNER JOIN         filtered_objects fo ON o.oid = fo.oid    WHERE         o.ndet <= 50),detection_data AS (    -- Step 3: Retrieve detection-level data for r-band filter (fid = 2)    SELECT         d.oid,        d.candid,        d.fid,        d.ra,        d.dec,        d.magpsf_corr,        d.sigmapsf_corr    FROM         detection d    INNER JOIN         filtered_objects_with_detections fod ON d.oid = fod.oid    WHERE         d.fid = 2),magnitude_stats AS (    -- Step 4: Calculate maximum rise from minimum magnitude for r-band filter (fid = 2)    SELECT         m.oid,        (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects_with_detections fod ON m.oid = fod.oid    WHERE         m.fid = 2)-- Step 5: Combine results and limit to 1000 rowsSELECT     dd.oid,    dd.candid,    dd.fid AS f_id,    dd.ra,    dd.dec,    dd.magpsf_corr,    dd.sigmapsf_corr,    ms.max_riseFROM     detection_data ddINNER JOIN     magnitude_stats ms ON dd.oid = ms.oidORDER BY     dd.oidLIMIT 1000]
(Background on this error at: https://sqlalche.me/e/20/f405)",14.546287536621094,2025-07-24T09:22:50,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,39,8,"-- [FINAL QUERY HERE]WITH filtered_objects AS (    SELECT         o.oid,         o.meanra,         o.meandec,         o.ndet    FROM         object o    INNER JOIN         probability p    ON         o.oid = p.oid    WHERE         p.ranking = 1         AND p.classifier_name = 'lc_classifier'         AND p.class_name = 'CV/Nova'        AND o.ndet <= 50),r_band_detections AS (    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.magpsf    FROM         detection d    INNER JOIN         filtered_objects fo    ON         d.oid = fo.oid    WHERE         d.fid = 2 -- r-band filter),r_band_magstats AS (    SELECT         m.oid,         m.magmax_corr,         m.magmin_corr,         (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects fo    ON         m.oid = fo.oid    WHERE         m.fid = 2 -- r-band filter)SELECT     fo.oid,     rd.candid,     rd.fid AS f_id,     fo.meanra,     fo.meandec,     rd.magpsf_corr,     rd.magpsf,     rms.max_riseFROM     filtered_objects foINNER JOIN     r_band_detections rdON     fo.oid = rd.oidINNER JOIN     r_band_magstats rmsON     fo.oid = rms.oidORDER BY     fo.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,33.55208945274353,2025-07-23T20:26:18,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH filtered_objects AS (    -- Filter objects with the highest probability class as 'CV/Nova' by the 'lc_classifier' and ndet <= 50    SELECT         o.oid,         o.meanra,         o.meandec,         o.ndet    FROM         object o    INNER JOIN         probability p    ON         o.oid = p.oid    WHERE         p.ranking = 1 -- Default condition for the most likely probability        AND p.classifier_name = 'lc_classifier' -- Default condition for the light curve classifier        AND p.class_name = 'CV/Nova' -- Filter for the 'CV/Nova' class        AND o.ndet <= 50 -- Filter for objects with at most 50 detections),r_band_detections AS (    -- Get detections in the r-band filter (fid = 2) for the filtered objects    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.magpsf    FROM         detection d    INNER JOIN         filtered_objects fo    ON         d.oid = fo.oid    WHERE         d.fid = 2 -- r-band filter),r_band_magstats AS (    -- Get corrected magnitude statistics in the r-band filter (fid = 2) and calculate the maximum rise    SELECT         m.oid,         m.magmax_corr,         m.magmin_corr,         (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    INNER JOIN         filtered_objects fo    ON         m.oid = fo.oid    WHERE         m.fid = 2 -- r-band filter)-- Final query to combine the results and retrieve the required columnsSELECT     fo.oid,     rd.candid,     rd.fid AS f_id,     fo.meanra,     fo.meandec,     rd.magpsf_corr,     rd.magpsf,     rms.max_riseFROM     filtered_objects foINNER JOIN     r_band_detections rdON     fo.oid = rd.oidINNER JOIN     r_band_magstats rmsON     fo.oid = rms.oidORDER BY     fo.oid -- Order by object identifierLIMIT 1000 -- Limit the result to the first 1000 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",14.389755010604858,2025-07-24T09:23:10,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,39,9,"-- [FINAL QUERY HERE]WITH filtered_objects AS (    SELECT         o.oid,         o.meanra,         o.meandec,         o.ndet    FROM         object o    INNER JOIN         probability p    ON         o.oid = p.oid    WHERE         p.ranking = 1         AND p.class_name = 'CV/Nova'         AND p.classifier_name = 'lc_classifier_stochastic'        AND o.ndet <= 50),detections_r_band AS (    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.magpsf    FROM         detection d    INNER JOIN         filtered_objects fo    ON         d.oid = fo.oid    WHERE         d.fid = 2 -- r-band filter),magstats_r_band AS (    SELECT         m.oid,         m.magmax_corr,         m.magmin_corr    FROM         magstat m    INNER JOIN         filtered_objects fo    ON         m.oid = fo.oid    WHERE         m.fid = 2 -- r-band filter)SELECT     d.oid,     d.candid,     d.fid AS f_id,     fo.meanra,     fo.meandec,     d.magpsf_corr,     d.magpsf,     (m.magmax_corr - m.magmin_corr) AS max_riseFROM     detections_r_band dINNER JOIN     magstats_r_band mON     d.oid = m.oidINNER JOIN     filtered_objects foON     d.oid = fo.oidORDER BY     d.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,41.020668268203735,2025-07-23T20:26:59,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH filtered_objects AS (    -- Filter objects with the highest probability class as 'CV/Nova' by the stochastic light curve classifier    -- and with a number of detections (ndet) of at most 50    SELECT         o.oid,         o.meanra,         o.meandec,         o.ndet    FROM         object o    INNER JOIN         probability p    ON         o.oid = p.oid    WHERE         p.ranking = 1 -- Default condition for the most likely probability        AND p.class_name = 'CV/Nova' -- Filter for 'CV/Nova' class        AND p.classifier_name = 'lc_classifier_stochastic' -- Use the stochastic light curve classifier        AND o.ndet <= 50 -- Filter objects with at most 50 detections),detections_r_band AS (    -- Select detections in the r-band filter (fid = 2) for the filtered objects    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.magpsf    FROM         detection d    INNER JOIN         filtered_objects fo    ON         d.oid = fo.oid    WHERE         d.fid = 2 -- r-band filter),magstats_r_band AS (    -- Select corrected magnitude statistics (max and min) in the r-band filter (fid = 2) for the filtered objects    SELECT         m.oid,         m.magmax_corr,         m.magmin_corr    FROM         magstat m    INNER JOIN         filtered_objects fo    ON         m.oid = fo.oid    WHERE         m.fid = 2 -- r-band filter)-- Final query to combine the results and calculate the maximum riseSELECT     d.oid,     d.candid,     d.fid AS f_id,     fo.meanra,     fo.meandec,     d.magpsf_corr,     d.magpsf,     (m.magmax_corr - m.magmin_corr) AS max_rise -- Calculate the maximum rise from min to max corrected magnitudeFROM     detections_r_band dINNER JOIN     magstats_r_band mON     d.oid = m.oidINNER JOIN     filtered_objects foON     d.oid = fo.oidORDER BY     d.oid -- Order by object identifierLIMIT 1000 -- Limit the result to the first 1000 rows]
(Background on this error at: https://sqlalche.me/e/20/f405)",16.703967332839966,2025-07-24T09:23:32,0.0,0.0,0.0,0.0,0.0,0.0
0.20.1,gpt-4o-2024-11-20,v4,39,10,"-- [FINAL QUERY HERE]WITH filtered_objects AS (    SELECT         o.oid,         o.meanra,         o.meandec,         o.ndet    FROM         object o    INNER JOIN         probability p    ON         o.oid = p.oid    WHERE         p.class_name = 'CV/Nova'        AND p.classifier_name = 'lc_classifier'        AND p.ranking = 1        AND o.ndet <= 50),r_band_detections AS (    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.magpsf    FROM         detection d    WHERE         d.fid = 2 -- r-band filter),r_band_magstats AS (    SELECT         m.oid,         m.magmax_corr,         m.magmin_corr,         (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    WHERE         m.fid = 2 -- r-band filter)SELECT     fo.oid,     rd.candid,     rd.fid AS f_id,     fo.meanra,     fo.meandec,     rd.magpsf_corr,     rd.magpsf,     rms.max_riseFROM     filtered_objects foINNER JOIN     r_band_detections rdON     fo.oid = rd.oidINNER JOIN     r_band_magstats rmsON     fo.oid = rms.oidORDER BY     fo.oidLIMIT 1000","['\nCREATE TABLE object ( /* this is the most important table. It contains the main statistics of an object, independent of time and band */\n    oid VARCHAR PRIMARY KEY,  /* object identifier, from the ZTF */\n    deltajd DOUBLE PRECISION, /* time difference between last and first detection */\n    firstmjd DOUBLE PRECISION, /* time of first detection */\n    lastmjd DOUBLE PRECISION, /* time of last detection */\n    ndethist INTEGER,  /* number of posible detections above 3 sigma */\n    ncovhist INTEGER,  /* number of visits */\n    mjdstarthist DOUBLE PRECISION,  /* time of first observation even if not detected, Earliest Julian date of epoch corresponding to ndethist [days]*/\n    mjdendhist DOUBLE PRECISION, /* time of last observation even if not detected, Latest Julian date of epoch corresponding to ndethist [days] */\n    corrected BOOLEAN, /* whether the object was corrected */\n    stellar BOOLEAN, /* whether the object is likely psf shaped */\n    ndet INTEGER, /* total number of detections for the object */\n    g_r_max DOUBLE PRECISION, /* g-r difference color at maximum */\n    g_r_max_corr DOUBLE PRECISION, /* g-r color at maximum*/\n    g_r_mean DOUBLE PRECISION, /* mean g-r difference color */\n    g_r_mean_corr DOUBLE PRECISION, /* mean g-r color */\n    meanra DOUBLE PRECISION,  /* mean right ascension */\n    meandec DOUBLE PRECISION,  /* mean declination */\n    sigmara DOUBLE PRECISION, /* right ascension dispersion */\n    sigmadec DOUBLE PRECISION, /* declination dispersion */\n    step_id_corr VARCHAR, /* correction step pipeline version */\n    diffpos BOOLEAN, /* whether the first detection was positive or negative */\n    reference_change BOOLEAN /* whether the reference image changes */\n);\nCREATE INDEX ix_object_ndet ON object USING btree (ndet);\nCREATE INDEX ix_object_firstmjd ON object USING btree (firstmjd);\nCREATE INDEX ix_object_g_r_max ON object USING btree (g_r_max);\nCREATE INDEX ix_object_g_r_mean_corr ON object USING btree (g_r_mean_corr);\nCREATE INDEX ix_object_meanra ON object USING btree (meanra);\nCREATE INDEX ix_object_meandec ON object USING btree (meandec);\n', 'CREATE TABLE probability ( /* this table contains the machine learning derived classification probabilities and rankings */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    class_name VARCHAR, /* name of the class */\n    classifier_name VARCHAR, /* name of the classifier */\n    classifier_version VARCHAR, /* version of the classiifer */\n    probability DOUBLE PRECISION NOT NULL, /* probability of the class given a classifier and version */\n    ranking INTEGER NOT NULL, /* class probability ranking (1 is the most likely class) */\n    PRIMARY KEY (oid, class_name, classifier_name, classifier_version)\n);\nCREATE INDEX ix_probabilities_oid ON probability USING hash (oid);\nCREATE INDEX ix_probabilities_probability ON probability USING btree (probability);\nCREATE INDEX ix_probabilities_ranking ON probability USING btree (ranking);\nCREATE INDEX ix_classification_rank1 ON probability USING btree (ranking) WHERE (ranking = 1);\n', 'CREATE TABLE detection (  /* this table contains information about the object detections, or its light curve. Avoid doing filters on this table in any parameter other than oid */\n    candid BIGINT PRIMARY KEY, /* unique candidate identifier */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    mjd DOUBLE PRECISION NOT NULL, /* time of detection in modified julian date */\n    fid INTEGER NOT NULL, /* filter identifier  (1=g; 2=r; 3=i)*/\n    pid FLOAT NOT NULL, /* program identifier */\n    diffmaglim DOUBLE PRECISION, /* limiting difference magnitud */\n    isdiffpos INTEGER NOT NULL, /* whether the difference is positive or negative */\n    nid INTEGER, /* unique night identifier */\n    ra DOUBLE PRECISION NOT NULL, /* inferred right ascension */\n    dec DOUBLE PRECISION NOT NULL, /* inferred declination */\n    magpsf DOUBLE PRECISION NOT NULL, /* point spread function (psf) difference magnitude */\n    sigmapsf DOUBLE PRECISION NOT NULL, /* psf difference magnitude error */\n    magap DOUBLE PRECISION, /* aperture difference magnitude */\n    sigmagap DOUBLE PRECISION, /* aperture difference magnitud error */\n    distnr DOUBLE PRECISION, /* distance to the nearest source in the reference image */\n    rb DOUBLE PRECISION, /* ZTF real bogus score */\n    rbversion VARCHAR, /* version of the ZTF real bogus score */\n    drb DOUBLE PRECISION, /* ZTF deep learning based real bogus score */\n    drbversion VARCHAR, /* versio  of the ZTF deep learning based real bogus score */\n    magapbig DOUBLE PRECISION, /* large aperture magnitude */\n    sigmagapbig DOUBLE PRECISION, /* large aperture magnitude error */\n    rfid INTEGER, /* identifier of the reference image used for the difference image */\n    magpsf_corr DOUBLE PRECISION, /* apparent magnitude (corrected difference magnitude) */\n    sigmapsf_corr DOUBLE PRECISION, /* error of the apparent magnitude assuming point like source */\n    sigmapsf_corr_ext DOUBLE PRECISION, /* error of the apparent magnitude assuming extended source */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s magnitude was corrected */\n    dubious BOOLEAN NOT NULL, /* whether the object is dubious or not */\n    parent_candid BIGINT, /* identifier of the candidate where this information was generated (this happens if the given detection does not pass the real bogus filter, but a later detection does */\n    has_stamp BOOLEAN NOT NULL, /* whether the candidate has an associated image stamp (same as before */\n    step_id_corr VARCHAR NOT NULL /* identifier of the correction step */\n);\nCREATE INDEX ix_ndetection_oid ON detection USING hash (oid);\n', 'CREATE TABLE magstat ( /* different statistics for the object divided by band or filter */\n    oid VARCHAR REFERENCES object(oid), /* unique object identifier */\n    fid INTEGER NOT NULL, /* band or filter identifier (1=g; 2=r; 3=i) */\n    stellar BOOLEAN NOT NULL, /* whether we believe the object is stellar */\n    corrected BOOLEAN NOT NULL, /* whether the objectâ€™s light curve has been corrected */\n    ndet INTEGER NOT NULL, /* the object number of detection in the given band */\n    ndubious INTEGER NOT NULL, /* the points in the light curve in the given band that we donâ€™t trust  */\n    dmdt_first DOUBLE PRECISION, /* lower limit for the the rate of magnitude change at detection in the given band */\n    dm_first DOUBLE PRECISION, /* change in magnitude with respect to the last non detection at detection in the given band */\n    sigmadm_first DOUBLE PRECISION, /* error in the change of magnitude w.r.t. the last detection in the given band */\n    dt_first DOUBLE PRECISION, /* time between the last non detection and the first detection for the given band */\n    magmean DOUBLE PRECISION, /* mean difference magnitude for the given band */\n    magmedian DOUBLE PRECISION, /* median difference magnitude for the given band */\n    magmax DOUBLE PRECISION, /* maximum difference magnitude for the given band */\n    magmin DOUBLE PRECISION, /* minimum difference magnitude for the given band */\n    magsigma DOUBLE PRECISION, /* dispersion of the difference magnitude for the given band */\n    maglast DOUBLE PRECISION, /* last difference magnitude for the given band */\n    magfirst DOUBLE PRECISION, /* first difference magnitude for the given band */\n    magmean_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    magmedian_corr DOUBLE PRECISION, /* median apparent (corrected) magnitude for the given band */\n    magmax_corr DOUBLE PRECISION, /* maximum apparent (corrected) magnitude for the given band */\n    magmin_corr DOUBLE PRECISION, /* minimum apparent (corrected) magnitude for the given band */\n    magsigma_corr DOUBLE PRECISION, /* dispersion of the apparent (corrected) magnitude for the given band */\n    maglast_corr DOUBLE PRECISION, /* last apparent (corrected) magnitude for the given band */\n    magfirst_corr DOUBLE PRECISION, /* mean apparent (corrected) magnitude for the given band */\n    firstmjd DOUBLE PRECISION, /* time of first detection for the given band */\n    lastmjd DOUBLE PRECISION, /* time of last detection for the given band */\n    step_id_corr VARCHAR NOT NULL, /* correction step id */\n    saturation_rate DOUBLE PRECISION /* saturation level for the given band */\n);\nCREATE INDEX ix_magstats_dmdt_first ON magstat USING btree (dmdt_first);\nCREATE INDEX ix_magstats_firstmjd ON magstat USING btree (firstmjd);\nCREATE INDEX ix_magstats_lastmjd ON magstat USING btree (lastmjd);\nCREATE INDEX ix_magstats_magmean ON magstat USING btree (magmean);\nCREATE INDEX ix_magstats_magmin ON magstat USING btree (magmin);\nCREATE INDEX ix_magstats_magfirst ON magstat USING btree (magfirst);\nCREATE INDEX ix_magstats_ndet ON magstat USING btree (ndet);\nCREATE INDEX ix_magstats_maglast ON magstat USING btree (maglast);\nCREATE INDEX ix_magstats_oid ON magstat USING hash (oid);\n']",advanced,30.519238471984863,2025-07-23T20:27:29,[None],"(psycopg2.ProgrammingError) can't execute an empty query
[SQL: -- [FINAL QUERY HERE]WITH filtered_objects AS (    -- Filter objects with the highest probability class as 'CV/Nova' by the stochastic light curve classifier    SELECT         o.oid,         o.meanra,         o.meandec,         o.ndet    FROM         object o    INNER JOIN         probability p    ON         o.oid = p.oid    WHERE         p.class_name = 'CV/Nova' -- Class name for CV/Nova        AND p.classifier_name = 'lc_classifier' -- Light curve classifier        AND p.ranking = 1 -- Only the most likely probabilities        AND o.ndet <= 50 -- Number of detections at most 50),r_band_detections AS (    -- Collect corrected difference magnitude and PSF corrected magnitude in the r-band filter    SELECT         d.oid,         d.candid,         d.fid,         d.magpsf_corr,         d.magpsf    FROM         detection d    WHERE         d.fid = 2 -- r-band filter),r_band_magstats AS (    -- Calculate the maximum rise from minimum in the r-band filter    SELECT         m.oid,         m.magmax_corr,         m.magmin_corr,         (m.magmax_corr - m.magmin_corr) AS max_rise    FROM         magstat m    WHERE         m.fid = 2 -- r-band filter)-- Final query to join all the subqueries and retrieve the required columnsSELECT     fo.oid,     rd.candid,     rd.fid AS f_id,     fo.meanra,     fo.meandec,     rd.magpsf_corr,     rd.magpsf,     rms.max_riseFROM     filtered_objects foINNER JOIN     r_band_detections rdON     fo.oid = rd.oidINNER JOIN     r_band_magstats rmsON     fo.oid = rms.oidORDER BY     fo.oidLIMIT 1000]
(Background on this error at: https://sqlalche.me/e/20/f405)",22.626168727874756,2025-07-24T09:24:01,0.0,0.0,0.0,0.0,0.0,0.0
